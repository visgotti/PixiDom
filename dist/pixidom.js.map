{"version":3,"file":"pixidom.js","sources":["../src/utils.ts","../src/mixins/KeyboardHandlers.ts","../src/Components/TextInput/TextField.ts","../src/Element.ts","../node_modules/tween-functions/index.js","../src/Components/ScrollList/ScrollBar.ts","../src/Components/ScrollList/ScrollList.ts","../src/tween/easingFunctions.ts","../src/tween/easing.ts","../src/tween/color.ts","../src/tween/colorTween.ts","../src/types.ts","../src/Components/Toggle.ts","../src/Components/Button.ts","../src/Components/Slider.ts","../src/index.ts"],"sourcesContent":["import type { ParsedMeasurement, PixiRectLike, ValidMeasurement } from \"./types\";\r\n\r\nNumber.isNaN = Number.isNaN || function(value) {\r\n    return typeof value === \"number\" && isNaN(value);\r\n}\r\n\r\nexport const parseLengthMeasurements = function(measurement: ValidMeasurement): ParsedMeasurement {\r\n    // Handle null or undefined\r\n    if (measurement == null) {\r\n        return {\r\n            valid: false,\r\n            error: 'Measurement cannot be null or undefined'\r\n        };\r\n    }\r\n\r\n    // Handle number type\r\n    if (typeof measurement === 'number') {\r\n        if (isNaN(measurement)) {\r\n            return {\r\n                valid: false,\r\n                error: 'Invalid number value'\r\n            };\r\n        }\r\n        \r\n        if (measurement < 0) {\r\n            return {\r\n                valid: false,\r\n                error: 'Cannot have negative length value'\r\n            };\r\n        }\r\n        \r\n        return {\r\n            valid: true,\r\n            type: 'pixel',\r\n            value: measurement\r\n        };\r\n    }\r\n\r\n    // Handle object type\r\n    if (typeof measurement === 'object' && 'value' in measurement && 'type' in measurement) {\r\n        const { value, type } = measurement;\r\n        \r\n        if (isNaN(value) || value < 0) {\r\n            return {\r\n                valid: false,\r\n                error: 'Invalid or negative value in object'\r\n            };\r\n        }\r\n\r\n        if (type === 'px' || type === 'pixel' || type === 'pixels') {\r\n            return {\r\n                valid: true,\r\n                type: 'pixel',\r\n                value\r\n            };\r\n        } else if (type === '%' || type === 'percent') {\r\n            return {\r\n                valid: true,\r\n                type: 'percent',\r\n                value\r\n            };\r\n        } else {\r\n            return {\r\n                valid: false,\r\n                error: 'Invalid measurement type. Must be px, pixel, pixels, % or percent'\r\n            };\r\n        }\r\n    }\r\n\r\n    // Handle string type\r\n    try {\r\n        const strMeasurement = String(measurement);\r\n        \r\n        // Check for percentage\r\n        if (strMeasurement.endsWith('%')) {\r\n            const value = parseFloat(strMeasurement.slice(0, -1));\r\n            if (isNaN(value)) {\r\n                return {\r\n                    valid: false,\r\n                    error: 'Did not find a valid number in front of % sign'\r\n                };\r\n            }\r\n            return {\r\n                valid: true,\r\n                value,\r\n                type: 'percent'\r\n            };\r\n        } \r\n        // Check for pixel values\r\n        else if (strMeasurement.endsWith('px')) {\r\n            const value = parseFloat(strMeasurement.slice(0, -2));\r\n            if (isNaN(value)) {\r\n                return {\r\n                    valid: false,\r\n                    error: 'Did not find a valid number in front of px'\r\n                };\r\n            }\r\n            if (value < 0) {\r\n                return {\r\n                    valid: false,\r\n                    error: 'Cannot have negative pixel length value'\r\n                };\r\n            }\r\n            return {\r\n                valid: true,\r\n                value,\r\n                type: 'pixel'\r\n            };\r\n        } \r\n        // Try to parse as number\r\n        else {\r\n            const value = parseFloat(strMeasurement);\r\n            if (!isNaN(value)) {\r\n                if (value < 0) {\r\n                    return {\r\n                        valid: false,\r\n                        error: 'Cannot have negative length value'\r\n                    };\r\n                }\r\n                return {\r\n                    valid: true,\r\n                    value,\r\n                    type: 'pixel'\r\n                };\r\n            }\r\n            return {\r\n                valid: false,\r\n                error: 'Length values must either be in %, px, or a valid number'\r\n            };\r\n        }\r\n    } catch (err) {\r\n        return { \r\n            valid: false, \r\n            error: err instanceof Error ? err.message : 'Unknown error parsing measurement' \r\n        };\r\n    }\r\n}\r\n\r\nexport function clamp(num, min, max) {\r\n    return num <= min ? min : num >= max ? max : num;\r\n}\r\n\r\nexport function string2hex(string: string): number {\r\n  return parseInt(string.replace('#', ''), 16);\r\n}\r\n\r\nexport function centerPixiObject(object: PixiRectLike, opts: { axis: 'y', parent?: { height: number } })\r\nexport function centerPixiObject(object: PixiRectLike, opts: { axis: 'x', parent?: { width: number } })\r\nexport function centerPixiObject(object: PixiRectLike, opts: { axis?: 'x' | 'y', parent?: { width?: number, height?: number } }) {\r\n    if(!object.parent && !opts?.parent) throw new Error(`No parent`);\r\n    const parentRect : { width?: number, height?: number } = opts?.parent || object.parent;\r\n    const centerX = () => object.x = parentRect.width / 2 - object.width / 2\r\n    const centerY = () => object.y = parentRect.height / 2 - object.height / 2\r\n    if(opts?.axis) {\r\n      if(opts.axis === 'x') {\r\n        centerX();\r\n      } else if (opts.axis === 'y') {\r\n        centerY();\r\n      }\r\n    } else {\r\n      centerX();\r\n      centerY();\r\n    }\r\n  }","export type IKeyboardBase = {\r\n    ignoreKeys: Array<number | string>;\r\n    submitKeyCodes: Array<number | string>;\r\n    on: (event: string, handler: (event: any) => void) => void;\r\n    off: (event: string, handler: (event: any) => void) => void;\r\n    change: (text: string) => void;\r\n    replaceSelectedWith: (text: string) => string; \r\n    getSelectedChars: () => string;\r\n    setCursor: (n: number) => void;\r\n    moveCursor: (n: number) => void;\r\n    removeLeftOfCursor: () => void;\r\n    removeRightOfCursor: () => void;\r\n    selectAll: () => void;\r\n    submit: () => void;\r\n    getSelectedRange: () =>  ({\r\n        indexes:\r\n            { start: number, end: number },\r\n        x:\r\n            { start: number, end: number }\r\n    } | null)\r\n}\r\ntype Constructor<T = IKeyboardBase> = new (...args: any[]) => T;\r\n\r\nexport default function <TBase extends Constructor>(Base: TBase){\r\n    return class KeyboardHandledInput extends Base {\r\n\r\n        public copiedText: string = '';\r\n        public textStates: Array<string> = [];\r\n        public currentStateIndex: number = -1;\r\n\r\n        constructor(...args: any[]) {\r\n            super(...args);\r\n            this.registerHandlers = this.registerHandlers.bind(this);\r\n            this.unregisterHandlers = this.unregisterHandlers.bind(this);\r\n            this.onCopy = this.onCopy.bind(this);\r\n            this.onPaste = this.onPaste.bind(this);\r\n            this.onCut = this.onCut.bind(this);\r\n            this.onKeyPress = this.onKeyPress.bind(this);\r\n            this.onKeyDown = this.onKeyDown.bind(this);\r\n\r\n            super.on('focus', this.registerHandlers);\r\n            super.on('blur', this.unregisterHandlers);\r\n        }\r\n\r\n        public changeStateIndex(change) {\r\n            const newIndex = this.currentStateIndex = change;\r\n            if(this.textStates[newIndex]) {\r\n                super.change(this.textStates[newIndex]);\r\n                this.currentStateIndex = change;\r\n            }\r\n        }\r\n\r\n        public registerHandlers() {\r\n            document.addEventListener(\"copy\", this.onCopy);\r\n            document.addEventListener(\"cut\", this.onCut);\r\n            document.addEventListener(\"paste\", this.onPaste);\r\n            document.addEventListener(\"keypress\", this.onKeyPress);\r\n            document.addEventListener(\"keydown\", this.onKeyDown);\r\n        }\r\n        public unregisterHandlers() {\r\n            document.removeEventListener(\"copy\", this.onCopy);\r\n            document.removeEventListener(\"cut\", this.onCut);\r\n            document.removeEventListener(\"paste\", this.onPaste);\r\n            document.removeEventListener(\"keypress\", this.onKeyPress);\r\n            document.removeEventListener(\"keydown\", this.onKeyDown);\r\n        }\r\n\r\n        public onPaste(event) {\r\n            const pastedText = event.clipboardData ? event.clipboardData.getData('text/plain') : this.copiedText;\r\n            const newText = super.replaceSelectedWith(pastedText);\r\n            if(newText !== null) {\r\n                this.addState(newText);\r\n            }\r\n        }\r\n\r\n        public onCopy(event) {\r\n            event.preventDefault();\r\n            const selected = super.getSelectedChars();\r\n            if(event.clipboardData) {\r\n                event.clipboardData.setData('text/plain', selected)\r\n            }\r\n            this.copiedText = selected;\r\n        }\r\n\r\n        public onCut(event){\r\n            event.preventDefault();\r\n            const selected = super.getSelectedChars();\r\n            if(event.clipboardData) {\r\n                event.clipboardData.setData('text/plain', selected);\r\n            }\r\n            this.copiedText = selected;\r\n            const newText = super.replaceSelectedWith(\"\");\r\n            if(newText !== null) {\r\n                this.addState(newText);\r\n            }\r\n        };\r\n\r\n        public onBackspace(){};\r\n        public onDelete(){};\r\n\r\n        public onKeyDown(event: Pick<KeyboardEvent, 'keyCode' | 'which' | 'ctrlKey' | 'metaKey' | 'shiftKey' | 'preventDefault' | 'code'>) {\r\n            const code = event.keyCode ?? event.which;\r\n            const key = event.code;\r\n            if(this.submitKeyCodes.includes(code) || this.submitKeyCodes.includes(key)) {\r\n                super.submit();\r\n            } else if (code == 37 || key === \"ArrowLeft\") { // left\r\n                const indexes = super.getSelectedRange()?.indexes;\r\n\r\n                if(!indexes) {\r\n                    super.moveCursor(-1)\r\n                } else {\r\n                    super.setCursor(indexes.start);\r\n                }\r\n            } else if (code == 39 || key === \"ArrowRight\") { // right\r\n                const indexes = super.getSelectedRange()?.indexes;\r\n                if(!indexes) {\r\n                    super.moveCursor(1)\r\n                } else {\r\n                    super.setCursor(indexes.end);\r\n                }\r\n            } else if(code == 8 || key === \"Backspace\") { // backspace\r\n                if(super.getSelectedRange()) {\r\n                    super.replaceSelectedWith(\"\");\r\n                } else {\r\n                    super.removeLeftOfCursor();\r\n                }\r\n            } else if (code == 46 || key === \"Delete\") { //delete\r\n                if(super.getSelectedRange()) {\r\n                    super.replaceSelectedWith(\"\");\r\n                } else {\r\n                    super.removeRightOfCursor();\r\n                }\r\n            } else if(event.ctrlKey || event.metaKey) {\r\n                if(code == 90 || key === \"KeyZ\") { // z\r\n                    const indexChange = event.shiftKey ? 1 : -1; // if shift is pressed we want to do redo behavior\r\n                    this.changeStateIndex(indexChange);\r\n                } else if(code == 65 || key === \"KeyA\") { // a\r\n                    event.preventDefault();\r\n                    super.selectAll();\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        public onKeyPress(event: Pick<KeyboardEvent, 'keyCode' | 'which' | 'key' | 'ctrlKey' | 'metaKey' | 'shiftKey' | 'preventDefault' | 'code'>) {\r\n            const code = event.keyCode ?? event.which;\r\n            const key = event.code;\r\n            if(this.submitKeyCodes.includes(code) || this.submitKeyCodes.includes(key) || this.ignoreKeys.includes(code) || this.ignoreKeys.includes(key) || event.ctrlKey || event.metaKey) {\r\n                return;\r\n            }\r\n            if(code !== null && code !== undefined) {\r\n                const char = String.fromCharCode(code);\r\n                if(char) {\r\n                    event.preventDefault();\r\n                    super.replaceSelectedWith(char);\r\n                }\r\n            } else if (key) {\r\n                const emptyStringKeys = [\r\n                    \"Backspace\",\r\n                    \"Tab\",\r\n                    \"Alt\",\r\n                    \"Pause\",\r\n                    \"CapsLock\",\r\n                    \"Escape\",\r\n                    \"Space\",\r\n                    \"PageUp\",\r\n                    \"PageDown\",\r\n                    \"End\",\r\n                    \"Home\",\r\n                    \"ArrowLeft\",\r\n                    \"ArrowUp\",\r\n                    \"ArrowRight\",\r\n                    \"ArrowDown\",\r\n                    \"Insert\",\r\n                    \"Delete\",\r\n                    \"ContextMenu\",\r\n                    \"NumLock\",\r\n                    \"ScrollLock\",\r\n                    \"PrintScreen\",\r\n                    \"F1\",\r\n                    \"F2\",\r\n                    \"F3\",\r\n                    \"F4\",\r\n                    \"F5\",\r\n                    \"F6\",\r\n                    \"F7\",\r\n                    \"F8\",\r\n                    \"F9\",\r\n                    \"F10\",\r\n                    \"F11\",\r\n                    \"F12\"\r\n                  ];\r\n                \r\n                if(emptyStringKeys.includes(key)) {\r\n                    event.preventDefault();\r\n                    super.replaceSelectedWith('');\r\n                } else {\r\n                    if(event.key && event.key.length === 1) {\r\n                        event.preventDefault();\r\n                        super.replaceSelectedWith(event.key);\r\n                    }\r\n                }\r\n                    \r\n                if (key === \"Backspace\") {\r\n                } else if (key === \"Delete\") {\r\n                    event.preventDefault();\r\n                    super.replaceSelectedWith('');\r\n                } else if (key && key.length === 1) {\r\n                    // Handle printable characters from `key`\r\n                    if (!event.ctrlKey && !event.metaKey) {\r\n                        event.preventDefault();\r\n                        super.replaceSelectedWith(key); // Insert the character\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        public addState(newText) {\r\n            this.textStates.push(newText);\r\n            this.currentStateIndex = this.textStates.length - 1;\r\n        }\r\n    }\r\n}","import { parseLengthMeasurements } from \"../../utils\";\r\nimport KeyboardHandlerMixin, { IKeyboardBase } from \"../../mixins/KeyboardHandlers\";\r\nimport { ValidMeasurement } from \"../../types\";\r\n\r\nexport type StyleOptions = {\r\n    width?: ValidMeasurement,\r\n    height?: ValidMeasurement,\r\n    cursorHeight: ValidMeasurement,\r\n    cursorWidth: number,\r\n    borderWidth?: number,\r\n    borderColor?: number,\r\n    fontColor: number,\r\n    highlightedFontColor: number,\r\n    cursorColor: number,\r\n    backgroundColor: number,\r\n    highlightedBackgroundColor: number,\r\n    borderOpacity: number,\r\n    xPadding: number,\r\n    yPadding: number,\r\n}\r\n\r\nexport type StyleOptionsParams = {\r\n    width?: number | string,\r\n    height?: number | string,\r\n    borderWidth?: number,\r\n    borderColor?: number,\r\n    fontColor?: number,\r\n    highlightedFontColor?: number,\r\n    cursorColor?: number,\r\n    cursorHeight?: number | string,\r\n    cursorWidth: number,\r\n    backgroundColor?: number,\r\n    highlightedBackgroundColor?: number,\r\n    borderOpacity?: number,\r\n    xPadding?: number,\r\n    yPadding?: number,\r\n}\r\n\r\nconst defaultStyleOptions = function() : StyleOptionsParams {\r\n    return {\r\n        width: '500px',\r\n        height: '16px',\r\n        fontColor: 0x000000,\r\n        highlightedFontColor: 0xffffff,\r\n        borderColor: 0x000000,\r\n        borderWidth: 1,\r\n        cursorColor: 0x000000,\r\n        cursorHeight: '90%',\r\n        cursorWidth: 1,\r\n        backgroundColor: 0xf7f7f7,\r\n        highlightedBackgroundColor: 0x000080, // navy blue\r\n        borderOpacity: 1,\r\n        xPadding: 0,\r\n        yPadding: 0,\r\n    }\r\n};\r\n\r\nconst lengthFieldsToValidate = [\"width\", \"height\", \"cursorHeight\"];\r\n\r\nclass TextFieldClass extends PIXI.Container implements IKeyboardBase {\r\n    private styleOptions: StyleOptions = {} as StyleOptions;\r\n    private cursorSprite: PIXI.Graphics = new PIXI.Graphics();\r\n    private textbox: PIXI.Graphics = new PIXI.Graphics();\r\n    private textboxMask: PIXI.Graphics = new PIXI.Graphics();\r\n\r\n    private textSprite: PIXI.extras.BitmapText;\r\n    private inFocus: boolean = false;\r\n\r\n    private cursorIndex: number = -1;\r\n    private clickedTimestamp: number;\r\n\r\n    private cursorAnimationFrame: any;\r\n    private lastCursorTs = Date.now();\r\n    private accCursorTime: number = 0;\r\n    private toggleCursorTime: number = 500;\r\n    private cursorIsVisible: boolean = true;\r\n\r\n    private _text: string = \"\";\r\n\r\n    private _visible: boolean = true;\r\n\r\n    private overflowOffsetX: number = 0;\r\n    private overflowOffsetY: number = 0;\r\n    private dragIndexStart: number = 0;\r\n    private dragIndexEnd: number = 0;\r\n    private inDrag: boolean = false;\r\n\r\n    public submitKeyCodes: Array<number | string> = [13, \"Enter\"];\r\n    public ignoreKeys: Array<number | string> = [];\r\n    public _maxCharacterLength: number = null;\r\n\r\n    private onFocusHandler: Function = () => {};\r\n    private onBlurHandler: Function = () => {};\r\n    private onChangeHandler: Function = () => {};\r\n    private onSubmitHandler: Function = () => {};\r\n    private onCharLimitHandler: Function = () => {};\r\n    constructor(font: string, styleOptions?: StyleOptionsParams, maxCharacterLength?, ignoreKeys?) {\r\n        super();\r\n        this.checkForOutsideClick = this.checkForOutsideClick.bind(this);\r\n\r\n        // override destroy method to call blur before destroy so we unregister document handlers if needed.\r\n        const oldDestroy = this.destroy.bind(this);\r\n        this['destroy'] = (options) => {\r\n           this.blur();\r\n           oldDestroy(options);\r\n        }\r\n\r\n        if(ignoreKeys) {\r\n            this.ignoreKeys = ignoreKeys;\r\n        }\r\n        const _defaultStyleOptions = { ...defaultStyleOptions() };\r\n        if(styleOptions) {\r\n            for(let key in styleOptions) {\r\n                _defaultStyleOptions[key] = styleOptions[key];\r\n            }\r\n        }\r\n        this.maxCharacterLength = maxCharacterLength;\r\n    \r\n        this.buttonMode = true;\r\n        this.interactive = true;\r\n\r\n        this.textSprite = new PIXI.extras.BitmapText('', { font, align: \"left\" });\r\n\r\n        this.cursor = \"text\";\r\n\r\n        this.on('pointerdown', this.handleMouseDown.bind(this));\r\n        //this.on('touchstart', this.handleMouseDown.bind(this));\r\n\r\n        this.on('pointerup', this.handleMouseUp.bind(this));\r\n    //    this.on('touchend', this.handleMouseUp.bind(this));\r\n\r\n        this.on('pointermove', this.handleMouseMove.bind(this));\r\n    //    this.on('touchmove', this.handleMouseMove.bind(this));\r\n        this.on('pointerupoutside', this.handleMouseUp.bind(this));\r\n\r\n        this.addChild(this.textboxMask);\r\n        this.addChild(this.textbox);\r\n        this.addChild(this.textSprite);\r\n        this.addChild(this.cursorSprite);\r\n\r\n        this.textSprite.mask = this.textboxMask;\r\n       // this.mask = this.textboxMask;\r\n\r\n        this.updateStyle(_defaultStyleOptions);\r\n\r\n        this.show();\r\n    }\r\n\r\n    public updateStyle(styleOptions: StyleOptionsParams) {\r\n        for(const key in styleOptions) {\r\n            if(lengthFieldsToValidate.includes(key)) {\r\n                const parsed = parseLengthMeasurements(styleOptions[key]);\r\n                if(parsed.error) {\r\n                    throw new Error(`Error for passed in style: ${key}, ${parsed.error}`)\r\n                } else {\r\n                    this.styleOptions[key] = parsed;\r\n                }\r\n            } else {\r\n                this.styleOptions[key] = styleOptions[key];\r\n            }\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    private redraw() {\r\n        this.redrawText();\r\n        this.redrawTextbox();\r\n        this.redrawCursor();\r\n    }\r\n\r\n    private redrawCursor() {\r\n        if(!this.inFocus) {\r\n            this.cursorIsVisible = false;\r\n            this.cursorSprite.visible = false;\r\n            return;\r\n        }\r\n\r\n        const cursorX = this.getCursorXFromIndex(this.cursorIndex) - this.overflowOffsetX;\r\n        this.cursorSprite.clear();\r\n\r\n        this.cursorSprite.lineStyle(this.styleOptions.cursorWidth, this.styleOptions.cursorColor);\r\n\r\n\r\n        const { value, type, error } = parseLengthMeasurements(this.styleOptions.cursorHeight);\r\n        if(error) {\r\n            throw new Error(`Error for passed in style: cursorHeight, ${error}`)\r\n        } \r\n        \r\n        const cursorHeight = type === \"pixel\" ? value : Math.round(this.textbox.height * (value/100));\r\n\r\n        const min = Math.min(this.textbox.height, cursorHeight);\r\n        const max = Math.max(this.textbox.height, cursorHeight);\r\n        const yOffset = (max - min) / 2; // centers cursor vertically\r\n        const bottomOffset = Math.floor(yOffset);\r\n        const topOffset = Math.ceil(yOffset);\r\n\r\n        this.cursorSprite.moveTo(cursorX, bottomOffset).lineTo(cursorX,  cursorHeight - topOffset);\r\n\r\n        // cursor is only visible if theres no range\r\n        if(this.getSelectedRange()) {\r\n            this.cursorIsVisible = false;\r\n            this.cursorSprite.visible = false;\r\n        } else {\r\n            this.cursorIsVisible = true;\r\n            this.cursorSprite.visible = true;\r\n        }\r\n    }\r\n\r\n    private redrawText() {\r\n        const range = this.getSelectedRange();\r\n        this.textSprite.y = this.styleOptions.yPadding;\r\n        this.textSprite.x = this.styleOptions.xPadding;\r\n\r\n        const currentCursorX = this.getCursorXFromIndex(this.dragIndexEnd);\r\n\r\n        const { value, type } = parseLengthMeasurements(this.styleOptions.width);\r\n        const totalWidth = window.innerWidth;\r\n        const maxWidth = type === 'pixel' ? value : totalWidth * (value/100);\r\n\r\n        if(currentCursorX > maxWidth + this.overflowOffsetX) {\r\n            this.overflowOffsetX = currentCursorX - maxWidth;\r\n            this.textSprite.x -= this.overflowOffsetX;\r\n        } else if(currentCursorX > maxWidth) {\r\n            if(currentCursorX < maxWidth + this.overflowOffsetX) {\r\n\r\n                if(currentCursorX < this.overflowOffsetX) {\r\n                    this.overflowOffsetX -= (this.overflowOffsetX - currentCursorX);\r\n                }\r\n\r\n                this.textSprite.x -= this.overflowOffsetX;\r\n            } else {\r\n                this.textSprite.x -= this.overflowOffsetX;\r\n            }\r\n        } else {\r\n            this.overflowOffsetX = 0;\r\n        }\r\n\r\n        for(let i = 0; i < this.textSprite.children.length; i++) {\r\n            const child = this.textSprite.children[i] as PIXI.Sprite;\r\n\r\n            if(range) {\r\n                const { indexes } = range;\r\n                const { start, end } = indexes;\r\n                const withinRange = i >= start && i < end;\r\n                if(withinRange) {\r\n                    child.tint = this.styleOptions.highlightedFontColor;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if(\"fontColor\" in this.styleOptions) {\r\n                child.tint = this.styleOptions.fontColor;\r\n            } else {\r\n                child.tint = 0xFFFFFF\r\n            }\r\n        }\r\n    }\r\n\r\n    private redrawTextbox() {\r\n        this.textbox.clear();\r\n        this.textbox.beginFill(this.styleOptions.backgroundColor, 1);\r\n        if(this.styleOptions.borderWidth > 0 && !Number.isNaN(this.styleOptions.borderWidth)) {\r\n            this.textbox.lineStyle(this.styleOptions.borderWidth, this.styleOptions.borderColor, this.styleOptions.borderOpacity)\r\n        }\r\n\r\n        let { value, type } = parseLengthMeasurements(this.styleOptions.height);\r\n\r\n        const totalWidth = window.innerWidth;\r\n        const totalHeight = window.innerHeight;\r\n\r\n        const height = type === 'pixel' ? value : totalHeight * (value/100);\r\n        ({ value, type } = parseLengthMeasurements(this.styleOptions.width));\r\n        const maxWidth = type === 'pixel' ? value : totalWidth * (value/100);\r\n\r\n        const range = this.getSelectedRange();\r\n\r\n        this.textbox.drawRect(0, 0, maxWidth, height);\r\n        this.textbox.endFill();\r\n\r\n        if(range) {\r\n            let start = range.x.start - this.overflowOffsetX;\r\n            const end = range.x.end - this.overflowOffsetX;\r\n            this.textbox.beginFill(this.styleOptions.highlightedBackgroundColor, 1);\r\n            let _width = end-start;\r\n\r\n            if(start + _width >= maxWidth) {\r\n                _width = maxWidth - start;\r\n            } else {\r\n                _width = end-start;\r\n            }\r\n\r\n            if(start + _width === maxWidth && _width > maxWidth) {\r\n                start = 0;\r\n                _width = maxWidth;\r\n            }\r\n        \r\n            this.textbox.drawRect(start, 0, _width, height);\r\n            this.textbox.endFill();\r\n        }\r\n\r\n        this.textboxMask.clear();\r\n        this.textboxMask.drawRect(0, 0, maxWidth, height);\r\n    }\r\n\r\n    private handleMouseUp(e){\r\n        const { x } = e.data.getLocalPosition(this);\r\n\r\n        if(this.inDrag) {\r\n            this.cursorIndex = this.getCursorIndexFromX(x);\r\n            this.handleRangeFinish();\r\n            // do multi text selext\r\n            //const clicked = this.indexFromPosition(e.position).left;\r\n            //this.multiSelect(this.dragIndexStart, this.indexFromPosition(e.position)\r\n        }\r\n    }\r\n\r\n    private handleMouseDown(e) {\r\n        this.clickedTimestamp = e.data.originalEvent.timeStamp;\r\n        const { x } = e.data.getLocalPosition(this);\r\n        if(!this.inFocus) {\r\n            this.focus();\r\n        }\r\n        this.clearRange();\r\n        this.cursorIndex = this.getCursorIndexFromX(x);\r\n        this.handleRangeStart(this.cursorIndex);\r\n        this.redraw();\r\n    }\r\n\r\n    private handleMouseMove(e) {\r\n        if(this.inDrag) {\r\n            const { x } = e.data.getLocalPosition(this);\r\n            this.handleRangeChange(this.getCursorIndexFromX(x));\r\n        }\r\n    }\r\n\r\n    private clearRange() {\r\n        this.dragIndexEnd = this.cursorIndex;\r\n        this.dragIndexStart = this.cursorIndex;\r\n    }\r\n\r\n    private handleRangeStart(startIndex) {\r\n        this.inDrag = true;\r\n        this.dragIndexStart = startIndex;\r\n        this.dragIndexEnd = startIndex;\r\n    }\r\n\r\n    private handleRangeChange(endIndex) {\r\n        if(endIndex !== this.dragIndexEnd) {\r\n            this.dragIndexEnd = endIndex;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    private handleRangeFinish() {\r\n        this.inDrag = false;\r\n    }\r\n\r\n    private getCursorXFromIndex(index) {\r\n        let leftChar;\r\n        // if theres no children in the text sprite that means our cursor should get x value for the beginning of the textfield\r\n        if(!this.textSprite.children || !this.textSprite.children.length || index <= 0) {\r\n            if(this.styleOptions.xPadding) {\r\n                return this.styleOptions.xPadding;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        if(index >= this.textSprite.children.length) {\r\n            leftChar = this.textSprite.children[this.textSprite.children.length - 1]\r\n        } else {\r\n            leftChar = this.textSprite.children[index - 1];\r\n        }\r\n        // get the position of character to left plus 1 pixel for padding\r\n        return leftChar.x + leftChar.width + 1 + this.styleOptions.xPadding;\r\n    }\r\n\r\n    public setCursor(index: number) {\r\n        if(index > -1 && index <= this.text.length) {\r\n            this.cursorIndex = index;\r\n            this.clearRange();\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    public moveCursor(indexChange: number) {\r\n        const newCursorIndex = this.cursorIndex + indexChange;\r\n        if(newCursorIndex > -1 && newCursorIndex <= this.text.length) {\r\n            this.cursorIndex = newCursorIndex;\r\n            this.clearRange();\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    private getCursorIndexFromX(x: number) : number {\r\n        x += this.overflowOffsetX;\r\n\r\n        if(x <= 0) {\r\n            return 0;\r\n        }\r\n\r\n        for(let i = 0; i < this.textSprite.children.length; i++) {\r\n            const charChild = this.textSprite.children[i] as any;\r\n            if(charChild.x + charChild.width > x) {\r\n                // click was on right side of character, current cursor index becomes i+1\r\n                if(charChild.x + (charChild.width / 2) < x) {\r\n                    return i+1;\r\n                } else {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return this.textSprite.children.length;\r\n    }\r\n\r\n    public getSelectedChars() {\r\n        const range = this.getSelectedRange();\r\n        if(!range) return \"\";\r\n\r\n         const { indexes } = range;\r\n         const { start, end } = indexes;\r\n         return this.text.substr(start, end - start);\r\n    }\r\n\r\n    public replaceSelectedWith(replaceWith) : string {\r\n        const replaceWithArray = replaceWith.split('');\r\n        \r\n        const replacedLength = replaceWithArray.length;\r\n\r\n        let oldTextValue = this.text;\r\n\r\n        const textArray = this.text.split('');\r\n        let start, end;\r\n        const range = this.getSelectedRangeIndexes();\r\n\r\n        if(range) {\r\n            ({ start, end } = range);\r\n        } else {\r\n            start = end = this.cursorIndex;\r\n        }\r\n        const deleteCount = end - start;\r\n\r\n        textArray.splice(start, deleteCount, ...replaceWithArray);\r\n        if(this._change(textArray.join(''))) {\r\n            this.cursorIndex = start + replacedLength;\r\n            this.clearRange();\r\n            this.redraw();\r\n            return this.text;\r\n        } else {\r\n            return this.text;\r\n        }\r\n    }\r\n\r\n    public getSelectedRangeIndexes() : {\r\n        start: number,\r\n        end: number\r\n    } {\r\n\r\n        const range = this.getSelectedRange();\r\n        if(!range) return null;\r\n\r\n        return { start: range.indexes.start, end: range.indexes.end };\r\n    }\r\n\r\n    public getSelectedRange() : {\r\n            indexes:\r\n                { start: number, end: number },\r\n            x:\r\n                { start: number, end: number }\r\n        } {\r\n\r\n\r\n        const start = Math.min(this.dragIndexStart, this.dragIndexEnd);\r\n        const end = Math.max(this.dragIndexStart, this.dragIndexEnd);\r\n\r\n        if(start === end) return null;\r\n\r\n        const startX = this.getCursorXFromIndex(start);\r\n        const endX = this.getCursorXFromIndex(end);\r\n\r\n        return {\r\n            indexes: { start, end },\r\n            x: { start: startX, end: endX }\r\n        }\r\n    }\r\n\r\n    public selectAll() {\r\n        this.setSelectedRange(0, this.text.length);\r\n    }\r\n    private setSelectedRange(start, end) {\r\n        this.dragIndexStart = start;\r\n        this.dragIndexEnd = end;\r\n        this.cursorIndex = end;\r\n        this.redraw();\r\n    }\r\n\r\n    private charFromPosition(position) : { left?: string, right?: string } {\r\n        return { left: null, right: null };\r\n    }\r\n\r\n    public removeLeftOfCursor() {\r\n        if(this.cursorIndex > 0) {\r\n            const array = this.text.split('');\r\n            array.splice(this.cursorIndex - 1, 1);\r\n            this.cursorIndex--;\r\n            this._change(array.join(''));\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    public removeRightOfCursor() {\r\n        const array = this.text.split('');\r\n        if(array.length && this.cursorIndex < array.length) {\r\n            array.splice(this.cursorIndex, 1);\r\n            this._change(array.join(''));\r\n            this.redraw();\r\n        }\r\n    }\r\n    public onCharLimit(handler) {\r\n        this.onCharLimitHandler = handler;\r\n    }\r\n    public onChange(handler) {\r\n        this.onChangeHandler = handler;\r\n    }\r\n    public onFocus(handler) {\r\n        this.onFocusHandler = handler;\r\n    }\r\n    public onBlur(handler) {\r\n        this.onBlurHandler = handler;\r\n    }\r\n    public onSubmit(handler) {\r\n        this.onSubmitHandler = handler;\r\n    }\r\n\r\n    public clear() {\r\n        this.text = \"\";\r\n        this.cursorIndex = 0;\r\n        this.clearRange();\r\n        this.redraw();\r\n    }\r\n\r\n    public submit() {\r\n        this.onSubmitHandler(this.text);\r\n    }\r\n\r\n    public focus() {\r\n        if(!this.inFocus) {\r\n            document.addEventListener('mousedown', this.checkForOutsideClick);\r\n            this.inFocus = true;\r\n            this.startCursorAnimation();\r\n            this.emit('focus');\r\n            this.onFocusHandler();\r\n        }\r\n    }\r\n\r\n    public blur() {\r\n        if(this.inFocus) {\r\n            document.removeEventListener('mousedown', this.checkForOutsideClick);\r\n            this.inFocus = false;\r\n            this.stopCursorAnimation();\r\n            this.clearRange();\r\n            this.redraw();\r\n            this.emit('blur');\r\n            this.onBlurHandler();\r\n        }\r\n    }\r\n\r\n    set maxCharacterLength(value: number) {\r\n        if(!isNaN(value)) {\r\n            if(value === null || value < 0) {\r\n                this._maxCharacterLength = null;\r\n            } else {\r\n                this._maxCharacterLength = value;\r\n            }\r\n        } else {\r\n            this._maxCharacterLength = null;\r\n        }\r\n    }\r\n\r\n    private _change(value: string) {\r\n        if(value !== this.text) {\r\n            if(this._maxCharacterLength !== null && value.length > this._maxCharacterLength) {\r\n                this.onCharLimitHandler(value);\r\n                return false;\r\n            } else {\r\n                this._text = value;\r\n                this.textSprite.text = value;\r\n                if(this._text === \"\" && this.textSprite.children) {\r\n                    this.textSprite.children.forEach(child => {\r\n                        this.textSprite.removeChild(child);\r\n                    })\r\n                }\r\n                \r\n                this.textSprite.updateTransform();                   \r\n                this.emit('change', value);\r\n                this.onChangeHandler(value);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public change(value) : boolean {\r\n        const c = this._change(value);\r\n        if(c) {\r\n            this.redrawText();\r\n        }\r\n        return c;\r\n    }\r\n\r\n    private startCursorAnimation() {\r\n        if(this.cursorAnimationFrame) {\r\n            this.stopCursorAnimation();\r\n        }\r\n        this.blinkCursor();\r\n    }\r\n\r\n    private stopCursorAnimation() {\r\n        this.cursorSprite.visible = false;\r\n        if(this.cursorAnimationFrame) {\r\n            clearTimeout(this.cursorAnimationFrame);\r\n            this.cursorAnimationFrame = null;\r\n            this.accCursorTime = 0;\r\n        }\r\n    }\r\n\r\n    private blinkCursor() {\r\n        if(this.cursorIsVisible) {\r\n            this.cursorSprite.visible = !this.cursorSprite.visible;\r\n        }\r\n        this.cursorAnimationFrame = setTimeout(this.blinkCursor.bind(this), this.toggleCursorTime);\r\n    }\r\n\r\n    private checkForOutsideClick(e) {\r\n        if(e.timeStamp !== this.clickedTimestamp) {\r\n            this.blur();\r\n        }\r\n    }\r\n\r\n    get text() {\r\n        if(this.textSprite.text === \" \" && this._text !== \" \") {\r\n            return \"\";\r\n        }\r\n        return this.textSprite.text;\r\n    }\r\n\r\n    set text(value) {\r\n        this.change(value);\r\n    }\r\n\r\n    // @ts-ignore\r\n    set visible(value) {\r\n        // @ts-ignore\r\n        super.visible = value;\r\n        this._visible = value;\r\n        if(value) {\r\n            this.startCursorAnimation();\r\n        } else {\r\n            this.stopCursorAnimation();\r\n        }\r\n    }\r\n\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    public show() {\r\n        this.visible = true;\r\n    }\r\n\r\n    public hide() {\r\n        this.visible = false;\r\n    }\r\n}\r\n\r\nconst TextField = KeyboardHandlerMixin(TextFieldClass)\r\nexport type TextField = InstanceType<typeof TextField>;\r\n\r\nexport { TextField } ","export class PixiElement extends PIXI.Container {\r\n    public isMouseOver: Boolean = false;\r\n    private elements: Array<Element>= [];\r\n    private dragPosition = null;\r\n    inDrag: Boolean = false;\r\n    private pointerIsDown: Boolean = false;\r\n    private _pointerdownHandler: Function = null;\r\n    private _pointermoveHandler: Function = null;\r\n    private _pointerupHandler: Function = null;\r\n    private _pointerupoutsideHandler: Function = null;\r\n    private _pointeroverHandler: Function = null;\r\n    private _pointeroutHandler: Function = null;\r\n    private _pointertapHandler: Function = null;\r\n    private _doubleclickHandler: Function = null;\r\n    private _dragmoveHandler: Function = null;\r\n    private _dragendHandler: Function = null;\r\n    private _dragstartHandler: Function = null;\r\n    private _swipeupHandler: Function = null;\r\n    private _swipedownHandler: Function = null;\r\n    private _swipeHandler: Function = null;\r\n\r\n    private doubleClickTimeout: any = null;\r\n\r\n    private _addChild: Function;\r\n\r\n    private completedTriggerTimeout: boolean = null;\r\n    private holdDragTriggerTime: number = 30;\r\n    private holdDragTriggerTimeout: any = null;\r\n\r\n    private helddownCountHandlers: any = {};\r\n    private helddownTimeouts: Array<any> = [];\r\n\r\n    private ifDragEndEmitSwipeDistance: number = 0;\r\n\r\n    private swipeStartY: number;\r\n    private swipeStartTs: number;\r\n    private swipeEndY: number;\r\n\r\n\r\n    private startDragY: number;\r\n    private lastDragCheckTs: number;\r\n    private curDragSwiperCheckIterationDuration: number;\r\n    private curDragSwipePowerIterationQueue: Array<number> = [];\r\n    private lastDragDistance: number = 0;\r\n\r\n    private lastDragY: number = 0;\r\n    private dragDistanceY: number;\r\n\r\n    public maxSwipeTimeout: number = 300;\r\n    public minSwipeDistance: number = 200;\r\n\r\n    private hasSwipeHandler: boolean = false;\r\n    private missedDiffs: number = 0;\r\n    constructor() {\r\n        super();\r\n        this._addChild = super.addChild;\r\n\r\n        this.on('pointerover', () => {\r\n            this.isMouseOver = true;\r\n        });\r\n        this.on('pointerout', () => {\r\n            this.isMouseOver = false;\r\n        });\r\n    }\r\n\r\n    set pointerdownHandler(handler) { this._setEventNameHandler(\"pointerdown\", handler); }\r\n    set pointerupHandler(handler) { this._setEventNameHandler(\"pointerup\", handler); }\r\n    set pointerupoutsideHandler(handler) {  this._setEventNameHandler(\"pointerupoutside\", handler); }\r\n    set pointeroverHandler(handler) { this._setEventNameHandler(\"pointerover\", handler); }\r\n    set pointermoveHandler(handler) { this._setEventNameHandler(\"pointermove\", handler); }\r\n    set pointeroutHandler(handler) { this._setEventNameHandler(\"pointerout\", handler); }\r\n    set pointertapHandler(handler) { this._setEventNameHandler(\"pointertap\", handler); }\r\n\r\n    set doubleclickHandler(handler) { this._setEventNameHandler(\"doubleclick\", handler); }\r\n    set dragstartHandler(handler) {this._setEventNameHandler(\"dragstart\", handler);}\r\n    set dragendHandler(handler) { this._setEventNameHandler(\"dragend\", handler); }\r\n    set dragmoveHandler(handler) {this._setEventNameHandler(\"dragmove\", handler); }\r\n\r\n    private _setHeldDownHandler(handler, timeout: number) {\r\n        if(this.helddownCountHandlers[timeout]) {\r\n            console.warn('already had held down timeout for duration at', timeout, 'this will override it.')\r\n        }\r\n        this.helddownCountHandlers[timeout] = handler;\r\n    }\r\n\r\n    private _setEventNameHandler(eventName, handler) {\r\n        const currentHandler =  this[`_${eventName}Handler`];\r\n        // register private handler if we never had a user defined one\r\n        if(!currentHandler) {\r\n            this.on(eventName, this[`__${eventName}`]);\r\n        }\r\n        // set user defined handler\r\n        this[`_${eventName}Handler`] = handler;\r\n\r\n        // if button mode wasnt enabled yet, we now do so.\r\n        if(!this.buttonMode) {\r\n            this.buttonMode = true;\r\n            this.interactive = true;\r\n        }\r\n    }\r\n\r\n    public centerX() {\r\n        if(this.parent) {\r\n            this.x = this.parent.width / 2 - this.width / 2;\r\n        }\r\n    }\r\n    public centerY() {\r\n        if(this.parent) {\r\n            this.y = this.parent.height / 2 - this.height / 2;\r\n        }\r\n    }\r\n    public center() {\r\n        this.centerX();\r\n        this.centerY();\r\n    }\r\n    public addElement (element: Element) {\r\n        if(!(element instanceof Element)) {\r\n            throw new Error('addElement called with a non element object')\r\n        }\r\n        this.elements.push(element);\r\n       // super.addChild(element);\r\n    }\r\n    public removeElement(element: Element) {\r\n        this.elements = this.elements.filter(e => e !== element);\r\n     //   super.removeChild(element);\r\n    }\r\n    public onMouseDown(handler) { this.pointerdownHandler = handler; }\r\n    public onMouseUp(handler) { this.pointerupHandler = handler; }\r\n    public onMouseUpOutside(handler) { this.pointerupoutsideHandler = handler };\r\n    public onMouseOver(handler) { this.pointeroverHandler = handler; }\r\n    public onMouseOut(handler) { this.pointeroutHandler = handler; }\r\n    public onMouseMove(handler) { this.pointermoveHandler = handler; }\r\n    public onClick(handler) { this.pointertapHandler = handler; }\r\n    public onHeldDown(handler, timeout: number) {\r\n        !this._pointerdownHandler && this.onMouseDown(() => {});\r\n        this._setHeldDownHandler(handler, timeout)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param handler\r\n     * @param hold - time in milliseconds needed to be held before triggering drag\r\n     */\r\n    public onDragStart(handler, hold?: number) {\r\n        if(hold || hold == 0 && !isNaN(hold)) {\r\n            this.holdDragTriggerTime = hold;\r\n        }\r\n        this.registerDefaultIfNeeded('pointerdown');\r\n        this.registerDefaultIfNeeded('pointerup');\r\n        this.registerDefaultIfNeeded('pointerupoutside');\r\n        this.registerDefaultIfNeeded('pointerout');\r\n        this.dragstartHandler = handler;\r\n    }\r\n    public onDragEnd(handler) {\r\n        this.registerDefaultIfNeeded('pointerup');\r\n        this.registerDefaultIfNeeded('pointerupoutside');\r\n        this.dragendHandler = handler;\r\n    }\r\n    public onDragMove(handler) {\r\n        if(!this._dragstartHandler) {this.onDragStart((event) => {}, this.holdDragTriggerTime)}\r\n        if(!this._dragendHandler) { this.onDragEnd((event) => {})}\r\n        this.registerDefaultIfNeeded('pointermove');\r\n        this.dragmoveHandler = handler;\r\n    }\r\n\r\n    public onDoubleClick(handler) {\r\n        // we need a pointerdownhandler for double click to function correctly\r\n        this.registerDefaultIfNeeded('pointerdown');\r\n        this.doubleclickHandler = handler;\r\n    };\r\n\r\n    public onSwipe(handler) {\r\n        this.hasSwipeHandler = true;\r\n        this.registerDefaultIfNeeded('pointerdown');\r\n        this.registerDefaultIfNeeded('pointerup');\r\n        this.registerDefaultIfNeeded('pointerupoutside');\r\n        if(!this._dragmoveHandler) {\r\n            this.onDragMove(() => {});\r\n        }\r\n        this._swipeHandler = handler;\r\n    }\r\n\r\n    public onSwipeUp(handler) {\r\n        this.hasSwipeHandler = true;\r\n        this.registerDefaultIfNeeded('pointerdown');\r\n        this.registerDefaultIfNeeded('pointerup');\r\n        this.registerDefaultIfNeeded('pointerupoutside');\r\n        this._swipeupHandler = handler;\r\n    }\r\n    public onSwipeDown(handler) {\r\n        this.hasSwipeHandler = true;\r\n        this.registerDefaultIfNeeded('pointerdown');\r\n        this.registerDefaultIfNeeded('pointerup');\r\n        this.registerDefaultIfNeeded('pointerupoutside');\r\n        this._swipedownHandler = handler;\r\n    }\r\n\r\n    private __doubleclick(event) {\r\n        clearTimeout(this.doubleClickTimeout);\r\n        this.doubleClickTimeout = null;\r\n        this._doubleclickHandler && this._doubleclickHandler(event);\r\n    }\r\n\r\n    private clearHelddownTimeouts() {\r\n        this.helddownTimeouts.forEach(t => {\r\n            clearTimeout(t);\r\n        });\r\n        this.helddownTimeouts.length = 0;\r\n    }\r\n\r\n    private registerDefaultIfNeeded(eventName) {\r\n        if(!this[`_${eventName}Handler`]) { this[`${eventName}Handler`] = () => {} };\r\n    }\r\n\r\n    private __pointerdown(event) {\r\n        Object.keys(this.helddownCountHandlers).forEach(time => {\r\n            this.helddownTimeouts.push(\r\n                setTimeout(() => {\r\n                    this.helddownCountHandlers[time](event)\r\n                }, parseInt(time))\r\n            );\r\n        });\r\n\r\n        this.pointerIsDown = true;\r\n        this._pointerdownHandler(event);\r\n\r\n        this.swipeStartTs = Date.now();\r\n        this.swipeStartY = event.data.global.y;\r\n\r\n        if(this._dragstartHandler && !this.inDrag) {\r\n            this.holdDragTriggerTimeout = setTimeout(() => {\r\n                this.completedTriggerTimeout = true;\r\n                this.holdDragTriggerTimeout = null;\r\n            }, this.holdDragTriggerTime)\r\n        }\r\n\r\n        if(this.doubleClickTimeout) {\r\n            this.emit(\"doubleclick\", event);\r\n        } else {\r\n            this.doubleClickTimeout = setTimeout(() => {\r\n                this.doubleClickTimeout = null;\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    private __pointertap(event) {\r\n        this._pointertapHandler(event);\r\n    }\r\n\r\n    private __dragstart(event) {\r\n        this.inDrag = true;\r\n        this.startDragY = event.data.global.y;\r\n        this.lastDragY = event.data.global.y;\r\n        this.lastDragCheckTs = Date.now();\r\n        this._dragstartHandler(event);\r\n    }\r\n\r\n    private __dragmove(event) {\r\n        this._dragmoveHandler(event);\r\n        if(this.hasSwipeHandler) {\r\n            const now = Date.now();\r\n            const delta = now - this.lastDragCheckTs;\r\n            this.lastDragCheckTs = now;\r\n\r\n            this.curDragSwiperCheckIterationDuration += delta;\r\n\r\n            const currentDragY = event.data.global.y;\r\n            const diff = this.lastDragY - currentDragY;\r\n            this.lastDragY = currentDragY;\r\n            if(Math.abs(diff) < 7) {\r\n                this.missedDiffs++;\r\n            } else {\r\n                this.missedDiffs = 0;\r\n            }\r\n            if(this.missedDiffs < 2) {\r\n                if(Math.sign(this.ifDragEndEmitSwipeDistance) != Math.sign(diff)) {\r\n                    this.swipeStartY = currentDragY;\r\n                    this.resetDragSwipeVars();\r\n                }\r\n                if(this.curDragSwiperCheckIterationDuration >= this.maxSwipeTimeout) {\r\n                    if(this.curDragSwipePowerIterationQueue.length) {\r\n                        this.ifDragEndEmitSwipeDistance -= this.curDragSwipePowerIterationQueue.shift();\r\n                    }\r\n                    this.curDragSwipePowerIterationQueue.push(diff);\r\n                    this.ifDragEndEmitSwipeDistance += diff;\r\n                } else {\r\n                    this.ifDragEndEmitSwipeDistance += diff;\r\n                    this.curDragSwipePowerIterationQueue.push(diff);\r\n                }\r\n            } else {\r\n                this.resetDragSwipeVars();\r\n            }\r\n        }\r\n    }\r\n\r\n    private resetDragSwipeVars() {\r\n        this.curDragSwipePowerIterationQueue.length = 0;\r\n        this.ifDragEndEmitSwipeDistance = 0;\r\n        this.curDragSwiperCheckIterationDuration = 0;\r\n    }\r\n\r\n    private __dragend(event) {\r\n        this.inDrag = false;\r\n        this._dragendHandler(event);\r\n\r\n        if(this.hasSwipeHandler) {\r\n            const sign = Math.sign(this.ifDragEndEmitSwipeDistance);\r\n            if(sign) {\r\n                const dur = Math.max(10, this.curDragSwiperCheckIterationDuration);\r\n                const timeDiff = Math.min(this.maxSwipeTimeout, dur);\r\n                const power = (this.ifDragEndEmitSwipeDistance / (timeDiff + 100 / 15)) * 10;\r\n                if(sign > 0 && this._swipedownHandler) {\r\n                    this._swipedownHandler(this.ifDragEndEmitSwipeDistance);\r\n                } else if(this._swipeupHandler) {\r\n                    this._swipeupHandler(this.ifDragEndEmitSwipeDistance);\r\n                }\r\n                this._swipeHandler && this._swipeHandler(power);\r\n            }\r\n            this.resetDragSwipeVars();\r\n        }\r\n        this.ifDragEndEmitSwipeDistance = 0;\r\n    }\r\n\r\n    private __pointermove(event) {\r\n        if(this.pointerIsDown && !this.inDrag && this.completedTriggerTimeout) {\r\n            this.emit(\"dragstart\", event);\r\n        } else if (this.inDrag && this._dragmoveHandler) {\r\n            this.emit(\"dragmove\", event);\r\n        }\r\n        this._pointermoveHandler(event);\r\n    }\r\n\r\n    private __pointerover(event) { this._pointeroverHandler(event); }\r\n\r\n    private __pointerout(event) {\r\n        this.clearHelddownTimeouts();\r\n        this.clearDragTimeouts();\r\n        this._pointeroutHandler(event);\r\n    }\r\n\r\n    private handleSwipeFinish(finishY) {\r\n        if(this.hasSwipeHandler) {\r\n            const yDiff = this.swipeStartY - finishY;\r\n            const timeDiff = Math.max(Date.now() - this.swipeStartTs, 1);\r\n            if(timeDiff < this.maxSwipeTimeout && Math.abs(yDiff) > this.minSwipeDistance) {\r\n                const power = (yDiff / (timeDiff + 100 / 15)) * 10;\r\n                if(Math.abs(power) > 10) {\r\n                    const handler = yDiff > 0 ? this._swipeupHandler : this._swipedownHandler;\r\n                    handler && handler(power);\r\n                    this._swipeHandler && this._swipeHandler(power);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private __pointerupoutside(event) {\r\n        this.clearHelddownTimeouts();\r\n        this.clearDragTimeouts();\r\n        this.handleSwipeFinish(event.data.global.y);\r\n        this.pointerIsDown = false;\r\n        this._pointerupoutsideHandler(event);\r\n        if(this.inDrag) {\r\n            this.emit(\"dragend\", event);\r\n        }\r\n    }\r\n    private __pointerup(event) {\r\n        this.clearHelddownTimeouts();\r\n        this.clearDragTimeouts();\r\n        this.handleSwipeFinish(event.data.global.y);\r\n        this.pointerIsDown = false;\r\n        this._pointerupHandler(event);\r\n        if(this.inDrag) {\r\n            this.emit(\"dragend\", event)\r\n        }\r\n    }\r\n\r\n    private clearDragTimeouts() {\r\n        this.completedTriggerTimeout = false;\r\n        if(this.holdDragTriggerTimeout) {\r\n            clearTimeout(this.holdDragTriggerTimeout);\r\n            this.holdDragTriggerTimeout = null;\r\n        }\r\n    }\r\n\r\n    private repositionSelf() {\r\n        if(this.parent) {\r\n        }\r\n    }\r\n\r\n    public repositionChildren() {\r\n        this.repositionSelf();\r\n        for(let i = 0; i < this.elements.length; i++) {\r\n            const elements = this.elements[i] as Element;\r\n          //  elements.repositionChildren();\r\n        }\r\n        this.children.forEach(c => {\r\n          //  c.repositionChildren();\r\n        });\r\n    }\r\n}","'use strict';\n\n// t: current time, b: beginning value, _c: final value, d: total duration\nvar tweenFunctions = {\n  linear: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * t / d + b;\n  },\n  easeInQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t + b;\n  },\n  easeOutQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * (t /= d) * (t - 2) + b;\n  },\n  easeInOutQuad: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    } else {\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    }\n  },\n  easeInCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t + b;\n  },\n  easeOutCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  },\n  easeInOutCubic: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n  },\n  easeInQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t * t + b;\n  },\n  easeOutQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  },\n  easeInOutQuart: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t + b;\n    } else {\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n  },\n  easeInQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * (t /= d) * t * t * t * t + b;\n  },\n  easeOutQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  },\n  easeInOutQuint: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n  },\n  easeInSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  },\n  easeOutSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  },\n  easeInOutSine: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  },\n  easeInExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;\n  },\n  easeOutExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;\n  },\n  easeInOutExpo: function(t, b, _c, d) {\n    var c = _c - b;\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    if ((t /= d / 2) < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    } else {\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n  },\n  easeInCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  },\n  easeOutCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  },\n  easeInOutCirc: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d / 2) < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    } else {\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n  },\n  easeInElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  },\n  easeOutElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  },\n  easeInOutElastic: function(t, b, _c, d) {\n    var c = _c - b;\n    var a, p, s;\n    s = 1.70158;\n    p = 0;\n    a = c;\n    if (t === 0) {\n      return b;\n    } else if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    } else {\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n    }\n  },\n  easeInBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  },\n  easeOutBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  },\n  easeInOutBack: function(t, b, _c, d, s) {\n    var c = _c - b;\n    if (s === void 0) {\n      s = 1.70158;\n    }\n    if ((t /= d / 2) < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    } else {\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n  },\n  easeInBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    var v;\n    v = tweenFunctions.easeOutBounce(d - t, 0, c, d);\n    return c - v + b;\n  },\n  easeOutBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  },\n  easeInOutBounce: function(t, b, _c, d) {\n    var c = _c - b;\n    var v;\n    if (t < d / 2) {\n      v = tweenFunctions.easeInBounce(t * 2, 0, c, d);\n      return v * 0.5 + b;\n    } else {\n      v = tweenFunctions.easeOutBounce(t * 2 - d, 0, c, d);\n      return v * 0.5 + c * 0.5 + b;\n    }\n  }\n};\n\nmodule.exports = tweenFunctions;\n","import { PixiElement } from '../../Element';\r\nimport {clamp, parseLengthMeasurements} from \"../../utils\";\r\nimport {ScrollList} from \"./ScrollList\";\r\nexport type SideScrollOptions = {\r\n    width: number,\r\n    height: number,\r\n    color: number\r\n}\r\n\r\nexport type ScrollerStyleOptions = {\r\n    color: number,\r\n    hoverColor: number,\r\n    mouseDownColor: number,\r\n}\r\n\r\nexport type ScrollBarStyleOptions = {\r\n    width: number,\r\n    height: number,\r\n    backgroundColor: number,\r\n    scrollerOptions: ScrollerStyleOptions\r\n}\r\n\r\nexport class ScrollBar extends PixiElement {\r\n    public scrolling : boolean = false;\r\n    private scroller: Scroller;\r\n    private bg: PIXI.Graphics;\r\n    private options: ScrollBarStyleOptions;\r\n    private scrollList : ScrollList;\r\n    constructor(scrollList: ScrollList, options: ScrollBarStyleOptions) {\r\n        super();\r\n        this.scrollList = scrollList;\r\n        // @ts-ignore\r\n        this.options = options || {};\r\n        this.bg = new PIXI.Graphics();\r\n        this.addChild(this.bg);\r\n        this.scroller = new Scroller(this, options.scrollerOptions);\r\n        this.addChild(this.scroller);\r\n        this.scroller.y = 0;\r\n        this.redraw();\r\n        this.registerScrollerEvents();\r\n        let heldDownInterval = 0;\r\n    }\r\n    public resizeScrollBar(parentTotalHeight: number, parentMaxHeight: number,) {\r\n    }\r\n    get visibleLength() {\r\n        return this.scrollList.height;\r\n    }\r\n    get maxLength() {\r\n        return this.scrollList.maxHeight;\r\n    }\r\n    public redraw() {\r\n        this.bg.clear();\r\n        this.bg.beginFill(this.options.backgroundColor || 0xf7f7f7);\r\n        this.bg.drawRect(0, 0, this.options.width, this.visibleLength);\r\n        this.scroller.redraw();\r\n    }\r\n\r\n    public setScrollPercent(n: number) {\r\n        const utilizedSpaceForPercent = this.visibleLength - this.scroller.height;\r\n        const y = utilizedSpaceForPercent * n;\r\n        this.scroller.y = y;\r\n    }\r\n\r\n    private registerScrollerEvents() {\r\n        let lastScrollY:any;\r\n        this.onHeldDown((e) => {\r\n            const mouseY = e.data.global.y -this.getGlobalPosition().y;\r\n            let toY = -1;\r\n            if(mouseY < this.scroller.y) {\r\n                toY = mouseY;\r\n            } else if (mouseY > this.scroller.y + this.scroller.height) {\r\n                toY = mouseY - this.scroller.height\r\n            }\r\n\r\n            if(toY >= 0 && !this.scrolling) {\r\n                this.scroller.y = clamp(toY, 0, this.visibleLength-this.scroller.height);\r\n                this.emitScroll();\r\n            }\r\n        }, 50);\r\n\r\n        let prevMouseY;\r\n        let start;\r\n        this.scroller.onDragStart(event => {\r\n            this.scrolling = true;\r\n        }, 0);\r\n        this.scroller.onDragEnd(event => {\r\n            this.scrolling = false;\r\n        });\r\n        this.scroller.onDragMove(event => {\r\n            event.stopPropagation();\r\n            const movementY = event.data.originalEvent.movementY;\r\n            const mouseY = event.data.global.y;\r\n            const globalP = this.getGlobalPosition();\r\n            const globalScrollY = this.scroller.y + globalP.y;\r\n            let extra = 0;\r\n            if(mouseY > globalScrollY + this.scroller.height) {\r\n                extra = mouseY - (globalScrollY + this.scroller.height);\r\n            } else if (mouseY < globalScrollY) {\r\n                extra = mouseY - globalScrollY;\r\n            }\r\n            this.scroller.y = clamp(this.scroller.y + movementY + extra, 0, this.visibleLength-this.scroller.height);\r\n            this.emitScroll();\r\n        })\r\n    }\r\n    private emitScroll() {\r\n        const utilizedSpaceForPercent = this.visibleLength - this.scroller.height;\r\n        const percent = this.scroller.y / utilizedSpaceForPercent\r\n        this.emit('scrolled', percent);\r\n    }\r\n}\r\n\r\n\r\nclass Scroller extends PixiElement {\r\n    private rect: PIXI.Graphics;\r\n    private curPercent: number;\r\n    private scrollBar : ScrollBar;\r\n    private styleObj : Partial<ScrollerStyleOptions>;\r\n    constructor(scrollBar: ScrollBar, options?: ScrollerStyleOptions) {\r\n        super();\r\n        this.scrollBar = scrollBar;\r\n        this.styleObj = options || {};\r\n        this.rect = new PIXI.Graphics();\r\n        this.addChild(this.rect);\r\n    }\r\n    private setStyle(o: ScrollBarStyleOptions) {\r\n        this.redraw();\r\n    }\r\n    public redraw() {\r\n        this.rect.clear();\r\n        if(this.scrollBar.visibleLength >= this.scrollBar.maxLength) return;\r\n        const length = Math.ceil(this.scrollBar.visibleLength / (this.scrollBar.maxLength / this.scrollBar.visibleLength));\r\n        this.rect.beginFill('color' in this.styleObj ? this.styleObj.color : 0x000000);\r\n        this.rect.drawRect(0, 0, this.scrollBar.width, length);\r\n        this.rect.endFill();\r\n    }\r\n}","import {clamp, parseLengthMeasurements} from \"../../utils\";\r\nexport type ScrollItemOptions = {\r\n    container: PIXI.Container,\r\n    onClick?: Function,\r\n}\r\nimport tweenFunctions from 'tween-functions';\r\n\r\nimport { PixiElement } from \"../../Element\";\r\nimport { ValidMeasurement } from \"../../types\";\r\n\r\nimport {ScrollBar, ScrollBarStyleOptions} from './ScrollBar';\r\nimport type {DestroyOptions} from \"pixi.js\";\r\n\r\nexport type ScrollStyleOptions = {\r\n  width?: ValidMeasurement,\r\n  height?: ValidMeasurement,\r\n  backgroundColor: number,\r\n  dividerColor: number,\r\n  dividerPixelHeight: number,\r\n  dividerPercentWidth: number,\r\n  dividerTopPadding: number,\r\n  dividerBottomPadding: number,\r\n  borderOpacity: number,\r\n  xPadding: number,\r\n  yPadding: number,\r\n  scrollBarOptions?: ScrollBarStyleOptions,\r\n}\r\n\r\nexport type ScrolllPerformanceOptions = {\r\n    disableScrollWheelScroll: boolean;\r\n    disableTouchScroll : boolean;\r\n    visibilityBuffer: number;\r\n    adjustVisibilityTime: number;\r\n}\r\nconst defaultPerformanceOptions = {\r\n    disableTouchScroll: false,\r\n    disableScrollWheelScroll: false,\r\n    visibilityBuffer: 200,\r\n    adjustVisibilityTime: 130,\r\n}\r\n\r\nexport class ScrollList extends PIXI.Container {\r\n    private scrollStyleOptions: ScrollStyleOptions;\r\n    private scrollItemsById: any = {};\r\n    private options: Array<PIXI.Container> = [];\r\n    private po: PixiElement = new PixiElement();\r\n\r\n    private scrollBar: ScrollBar;\r\n    private scrollbarScroll: PIXI.Graphics;\r\n    private scrollRect: PixiElement = new PixiElement();\r\n    private scrollDuration: number = 0;\r\n\r\n    private scrollMask: PIXI.Graphics;\r\n\r\n    private _currentScroll: number = 0;\r\n    private lastScroll: number = 0;\r\n    private __width: number;\r\n    private __height: number;\r\n\r\n    private pointerdownStart: number = 0;\r\n    private startingVisibleChildIndex: number = 0;\r\n    private endingVisibleChildIndex: number = 0;\r\n\r\n    private scrollCurrentDur: number = 0;\r\n    private currentAdjustVisibilityDelta: number = 0;\r\n    private animationFrame: any = null;\r\n    private nextItemY: number = 0;\r\n    private scrollToDest: number = 0;\r\n    private listContainer: PixiElement = new PixiElement();\r\n    private listRect: PIXI.Graphics = new PIXI.Graphics();\r\n    private scrollLength: number = 0;\r\n    private adjustedIndex: number = 0;\r\n    maxHeight: number = 0;\r\n    private lastOverOption: PIXI.Container = null;\r\n    private lastDownOption: PIXI.Container = null;\r\n    public freezeScroll: boolean = false;\r\n    private tweenFunc: Function;\r\n    private _needsUpdateScoller : boolean = true;\r\n    private _registeredScrollEvent : boolean = false;\r\n\r\n    readonly performanceOptions: ScrolllPerformanceOptions;\r\n    constructor(scrollStyleOptions: ScrollStyleOptions, scrollItemOptions: Array<ScrollItemOptions>, scrollPerformanceOptions?: ScrolllPerformanceOptions) {\r\n        super();\r\n        this.handleScrollWheelScroll = this.handleScrollWheelScroll.bind(this);\r\n\r\n        this.interactive = true;\r\n        this.interactiveChildren = true;\r\n        this.__width = parseLengthMeasurements(scrollStyleOptions.width).value;\r\n        this.__height = parseLengthMeasurements(scrollStyleOptions.height).value;\r\n\r\n        this.performanceOptions = scrollPerformanceOptions ? scrollPerformanceOptions : { ...defaultPerformanceOptions };\r\n        if(scrollPerformanceOptions) {\r\n            for(let key in defaultPerformanceOptions) {\r\n                if(!scrollPerformanceOptions.hasOwnProperty(key)) {\r\n                    this.performanceOptions[key] = defaultPerformanceOptions[key];\r\n                }\r\n            }\r\n        }\r\n        this.scrollbarScroll = new PIXI.Graphics();\r\n        this.scrollStyleOptions = scrollStyleOptions;\r\n        this.scrollLength = 0;\r\n        this.scrollMask = new PIXI.Graphics();\r\n        this.scrollMask.beginFill(0xFFFFFF);\r\n        this.scrollMask.drawRect(0, 0, this.__width, this.__height);\r\n        this.scrollMask.endFill();\r\n\r\n        this.listRect.beginFill(0xFFFFFF, 0);\r\n        this.listRect.drawRect(0, 0, this.__width, this.__height);\r\n        this.listRect.endFill();\r\n        this.scrollRect.addChild(this.listRect);\r\n\r\n     //   this.scrollMask.hitArea = new PIXI.Rectangle(0, 0, this.__width, this.__height);\r\n\r\n        this.addChild(this.scrollMask);\r\n        this.addChild(this.po);\r\n        this.po.interactive = true;\r\n        this.po.mask = this.scrollMask;\r\n\r\n     //   this.addChild(this.scrollRect);\r\n\r\n        let lastScrollY;\r\n        let heldTimeout = null;\r\n\r\n        if(!this.performanceOptions.disableScrollWheelScroll) {\r\n            this.registerScrollEvents();\r\n        }\r\n\r\n     //   this.initializeEventPropogation();\r\n        if(!this.performanceOptions.disableTouchScroll) {\r\n            this.scrollRect.onSwipe(this.applySwipe.bind(this));\r\n\r\n            this.on('pointerdown', (event) => {\r\n                if(this.scrollBar && this.scrollBar.scrolling) return;\r\n                if(this.performanceOptions.disableTouchScroll) return;\r\n                if(this.animationFrame !== null) {\r\n                    cancelAnimationFrame(this.animationFrame);\r\n                    if(!this.po.inDrag) {\r\n                        this.po.emit('dragstart', event);\r\n                    }\r\n                    this.animationFrame = null;\r\n                }\r\n            });\r\n            this.on('pointerup', () => {\r\n                if(this.scrollBar && this.scrollBar.scrolling) return;\r\n                if(this.performanceOptions.disableTouchScroll) return;\r\n                if(heldTimeout) {\r\n                    clearTimeout(heldTimeout);\r\n                    heldTimeout = null;\r\n                }\r\n            });\r\n\r\n            this.po.onSwipe(this.applySwipe.bind(this));\r\n            this.po.onDragStart(event => {\r\n                if(this.scrollBar && this.scrollBar.scrolling) return;\r\n                if(this.freezeScroll) return;\r\n                this.tweenFunc = tweenFunctions.easeOutElastic;\r\n                this.scrollLength = 0;\r\n                this.scrollCurrentDur = 0;\r\n                this.scrollDuration = 0;\r\n                this.currentAdjustVisibilityDelta = 0;\r\n                lastScrollY = event.data.global.y;\r\n            });\r\n            this.po.onDragMove(event => {\r\n                if(this.scrollBar && this.scrollBar.scrolling) return;\r\n                if(this.freezeScroll) return;\r\n                const diff =  event.data.global.y - lastScrollY;\r\n                lastScrollY = event.data.global.y;\r\n                this.applyDrag(diff);\r\n            });\r\n            this.po.onDragEnd(event => {\r\n                if(this.scrollBar && this.scrollBar.scrolling) return;\r\n                this.adjustVisibility(null, true);\r\n            });\r\n        }\r\n        if(scrollStyleOptions.scrollBarOptions) {\r\n            this.scrollBar = new ScrollBar(this, scrollStyleOptions.scrollBarOptions);\r\n            this.addChild(this.scrollBar);\r\n            this.scrollBar.on('scrolled', (percent) => {\r\n                this._needsUpdateScoller = false;\r\n                this.setScrollPercent(percent);\r\n                this._needsUpdateScoller = true;\r\n            });\r\n        }\r\n\r\n       // this.po.mask = this.scrollMask;\r\n        this.redraw();\r\n    }\r\n\r\n    private handleScrollWheelScroll(event : WheelEvent) {\r\n        this.currentScroll += event.deltaY;\r\n        this.adjustVisibility(null, true);\r\n    }\r\n\r\n    public destroy(options?: DestroyOptions | boolean) {\r\n        if(this._registeredScrollEvent) {\r\n            document.removeEventListener('wheel', this.handleScrollWheelScroll);\r\n            this._registeredScrollEvent = false;\r\n        }\r\n        super.destroy(options)\r\n    }\r\n\r\n    get utilizedLength() : number {\r\n        return this.maxHeight - this.__height;\r\n    }\r\n\r\n    get scrollPercent() : number {\r\n        return this.currentScroll / this.utilizedLength\r\n    }\r\n\r\n    private registerScrollEvents() {\r\n        this.once('pointerover', () => {\r\n            this._registeredScrollEvent = true;\r\n            document.addEventListener('wheel', this.handleScrollWheelScroll);\r\n            this.once('pointerout', () => {\r\n                document.removeEventListener('wheel', this.handleScrollWheelScroll);\r\n                this._registeredScrollEvent = false;\r\n                this.registerScrollEvents();\r\n            })\r\n        })\r\n    }\r\n\r\n    public setScrollPercent(n : number) {\r\n        n = clamp(n, 0, 1);\r\n        const prev = this.currentScroll;\r\n        this.currentScroll = this.utilizedLength * n;\r\n        if(prev !== this.currentScroll) {\r\n            this.adjustVisibility(null, true);\r\n        }\r\n    }\r\n\r\n    private findVisible() {\r\n\r\n    }\r\n\r\n    public freeze() {\r\n        this.toggleFreezeScroll(true)\r\n    }\r\n    public unfreeze() {\r\n        this.toggleFreezeScroll(false);\r\n    }\r\n    public toggleFreezeScroll(freeze: boolean) {\r\n        this.freezeScroll = freeze;\r\n    }\r\n\r\n    private _containsPoint(container: PIXI.Container, p) {\r\n        p = this.toLocal(p);\r\n        const ix = 0;\r\n        const ax = this.__width;\r\n        const iy = container.y - this.currentScroll;\r\n        const ay = iy + container.height;\r\n\r\n        return (ix <= p.x && p.x <= ax && iy <= p.y && p.y <= ay)\r\n    }\r\n\r\n    public resize(w, h) {\r\n        this.__width = w;\r\n        this.__height = h;\r\n        this.scrollMask.clear();\r\n        this.scrollMask\r\n            .beginFill(0xFFFFFF)\r\n            .drawRect(0, 0, this.__width, this.__height)\r\n            .endFill();\r\n\r\n        this.listRect.clear();\r\n        this.listRect\r\n            .beginFill(this.scrollStyleOptions.backgroundColor)\r\n            .drawRect(0, 0, this.__width, this.__height)\r\n            .endFill();\r\n\r\n        this.adjustVisibility(null, true);\r\n        this.scrollBar && this.scrollBar.redraw();\r\n    }\r\n\r\n    private redraw() {\r\n        this.adjustOptions();\r\n        if(this.scrollBar) {\r\n            this.scrollBar.redraw();\r\n            this.scrollBar.x = this.po.width;\r\n        }\r\n    }\r\n\r\n\r\n    private repositionOptions() {\r\n        let y = 0;\r\n        for(let i = 0; i < this.options.length; i++) {\r\n            this.options[i].y = y;\r\n            y += this.options[i].height\r\n        }\r\n    }\r\n\r\n    private adjustVisibility(delta, force=false) {\r\n        if(force) {\r\n            this.currentAdjustVisibilityDelta = 0;\r\n        } else {\r\n            this.currentAdjustVisibilityDelta += delta;\r\n            if(!force && this.currentAdjustVisibilityDelta >= this.performanceOptions.adjustVisibilityTime) {\r\n                this.currentAdjustVisibilityDelta = 0;\r\n                return;\r\n            }\r\n        }\r\n        let setFirstVisible = false;\r\n        for(let i = 0; i < this.options.length; i++) {\r\n            const option = this.options[i];\r\n            const canSeeFromTop = option.y + option.height + this.performanceOptions.visibilityBuffer >= this.currentScroll;\r\n            const canSeeFromBottom = this.__height + this.currentScroll >= option.y - this.performanceOptions.visibilityBuffer;\r\n            const wasVisible = option.visible;\r\n            option.visible = canSeeFromBottom && canSeeFromTop;\r\n            if(option.visible && !setFirstVisible) {\r\n                this.startingVisibleChildIndex = i;\r\n                setFirstVisible = true;\r\n            }\r\n            if(!option.visible && setFirstVisible) {\r\n                this.endingVisibleChildIndex = Math.min(i + 1, this.options.length - 1);\r\n            }\r\n\r\n            if(wasVisible !== option.visible) {\r\n                if(wasVisible) {\r\n                    option.emit('hide');\r\n                } else {\r\n                    option.emit('show');\r\n                }\r\n                if(option['just_added']) {\r\n                    delete option['just_added'];\r\n                }\r\n            } else if (option['just_added']) {\r\n                if(option.visible) {\r\n                    option.emit('show');\r\n                } else {\r\n                    option.emit('hide');\r\n                }\r\n                delete option['just_added'];\r\n            }\r\n\r\n            if(!option.visible && !wasVisible && setFirstVisible) {\r\n                // dont need to check any more\r\n               // console.log('adjust visibility took', Date.now() - start);\r\n                return;\r\n            }\r\n        }\r\n        // if it gets here it didnt run into an ending visible which means the last item is visible.\r\n        this.endingVisibleChildIndex = this.options.length - 1;\r\n    //    console.log('adjust visibility took', Date.now() - start);\r\n    }\r\n\r\n    private adjustOptions() {\r\n      //  console.log('adjust options', this.currentScroll);\r\n        if(this.po && this.po.parent === this) {\r\n            this.po.y = -this.currentScroll;\r\n            this.adjustedIndex++;\r\n        }\r\n    }\r\n\r\n    private animateScroll(ts: number) {\r\n        const now = Date.now();\r\n        const delta = now - ts;\r\n        this.currentAdjustVisibilityDelta += delta;\r\n        this.scrollCurrentDur += delta;\r\n\r\n        if(this.scrollCurrentDur >= this.scrollDuration) {\r\n            this.animationFrame = null;\r\n            this.currentScroll = this.scrollToDest;\r\n            this.currentAdjustVisibilityDelta = 0;\r\n            this.adjustVisibility(null, true);\r\n            return null;\r\n        }\r\n        this.currentScroll = this.tweenFunc(this.scrollCurrentDur, this.lastScroll, this.scrollToDest, this.scrollDuration);\r\n\r\n        this.adjustVisibility(delta);\r\n\r\n        return requestAnimationFrame(() => {\r\n            if(this.animationFrame !== null) {\r\n                this.animationFrame = this.animateScroll(now);\r\n            }\r\n        });\r\n    }\r\n\r\n    private applyDrag(difference) {\r\n        if(this.animationFrame) return;\r\n\r\n        // scroll height is less than total height.. no need to scroll anything.\r\n        if(this.maxHeight <= this.__height) {\r\n            return;\r\n        }\r\n        if(difference > 0 && this._currentScroll === 0) {\r\n            this.adjustVisibility(null, true);\r\n            return;\r\n        } else if (difference < 0 && this._currentScroll === this.maxHeight - this.__height) {\r\n            this.adjustVisibility(null, true);\r\n            return;\r\n        }\r\n\r\n        this.lastScroll = this._currentScroll;\r\n        this.scrollLength += difference;\r\n\r\n        this.scrollToDest = this.scrollLength >= 0 ?\r\n            Math.min(this.maxHeight - this.__height, this._currentScroll - difference) :\r\n            Math.max(0, this._currentScroll - difference);\r\n\r\n        this.scrollDuration += Math.abs(difference);\r\n        const distanceToTraverse = Math.abs(this._currentScroll - this.scrollToDest);\r\n        const maxTime = distanceToTraverse > 1000 ? 4000 : distanceToTraverse > 700 ? 3000 : distanceToTraverse > 500  ? 2000 : distanceToTraverse > 200 ? 1000 : 400;\r\n\r\n        this.scrollDuration = Math.min(this.scrollDuration, maxTime);\r\n        this.animationFrame = this.animateScroll(Date.now());\r\n    }\r\n\r\n    private applySwipe(power) {\r\n        if(Math.abs(power) < 1) return;\r\n\r\n        if(this.animationFrame) {\r\n            cancelAnimationFrame(this.animationFrame);\r\n            this.animationFrame = null;\r\n        }\r\n\r\n        this.tweenFunc = tweenFunctions.easeOutCubic;\r\n        this.lastScroll = this._currentScroll;\r\n        this.scrollCurrentDur = 0;\r\n        const absPower = Math.abs(power);\r\n        const multiplier = absPower < 10 ? 25 : absPower < 25 ? 30 : absPower < 30 ? 35 : absPower < 35 ? 55 : absPower < 40 ? 60 : absPower < 60 ? 65 : 80;\r\n        const diff = power * multiplier;\r\n        // scroll height is less than total height.. no need to scroll anything.\r\n        if(this.maxHeight <= this.__height) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToDest = power >= 0 ?\r\n            Math.min( this.maxHeight - this.__height, this._currentScroll + diff) :\r\n            Math.max(0, this._currentScroll + diff);\r\n\r\n     //   if(this.scrollToDest === this.maxHeight - this.__height || this.scrollToDest === 0) {}\r\n\r\n        const distanceToTraverse = Math.abs(this._currentScroll - this.scrollToDest);\r\n        let maxTime;\r\n        if(this.scrollToDest === 0 || this.scrollToDest === this.maxHeight - this.__height + 0) {\r\n            maxTime = distanceToTraverse > 1000 ? 1000 : distanceToTraverse > 500 ? 500 : 200;\r\n        } else {\r\n            maxTime = distanceToTraverse > 2700 ? 4000 : distanceToTraverse > 2300 ? 3500 : distanceToTraverse > 1500 ? 3000 : distanceToTraverse > 1000 ? 2700 : distanceToTraverse > 700 ? 2300 : distanceToTraverse > 500 ? 2000 : distanceToTraverse > 300 ? 1500 : distanceToTraverse > 100 ? 1000 : 700;\r\n        }\r\n        this.scrollDuration = Math.min(maxTime);\r\n        this.animationFrame = this.animateScroll(Date.now());\r\n    }\r\n\r\n    set currentScroll(value) {\r\n        if(value < 0) {\r\n            value = 0;\r\n        } else if (value > this.maxHeight - this.__height) {\r\n            value = this.maxHeight - this.__height\r\n        }\r\n        this._currentScroll = value;\r\n        if (this.scrollBar && this._needsUpdateScoller) {\r\n            this.scrollBar.setScrollPercent(this.scrollPercent);\r\n        }\r\n        this.adjustOptions();\r\n    }\r\n\r\n    get currentScroll() {\r\n        return this._currentScroll;\r\n    }\r\n\r\n    public addScrollItems(containers: Array<PIXI.Container | PIXI.Sprite | PIXI.Graphics | PIXI.Text>) {\r\n        containers.forEach(c => {\r\n            c['just_added'] = true;\r\n            c.visible = true;\r\n            this.po.addChild(c);\r\n            if(c.interactive) {\r\n                c.hitArea = new PIXI.Rectangle(0, 0, c.width, c.height);\r\n            }\r\n            this.options.push(c);\r\n        });\r\n        this.recalculateHeight();\r\n        this.repositionOptions();\r\n        this.adjustVisibility(null, true);\r\n        this.redraw();\r\n    }\r\n    public addScrollItem(container: PIXI.Container | PIXI.Sprite | PIXI.Graphics | PIXI.Text) {\r\n        this.addScrollItems([container])\r\n    }\r\n\r\n    private recalculateHeight() {\r\n        let height = 0;\r\n        this.options.forEach(c => {\r\n            height += c.height;\r\n        });\r\n        this.maxHeight = height;\r\n    }\r\n\r\n    public spliceScrollItems(fromIndex, toIndex?, destroyItem=true) {\r\n        toIndex = toIndex >= 0 ? toIndex : this.options.length;\r\n        const indexArray = [];\r\n        for(let i = fromIndex; i < toIndex; i++) {\r\n            indexArray.push(i);\r\n        }\r\n        this.removeScrollItems(indexArray, destroyItem);\r\n    }\r\n\r\n    public removeScrollItems(indexOrContainer, destroyItem=true) {\r\n        if(!(Array.isArray(indexOrContainer))) {\r\n            indexOrContainer = [indexOrContainer]\r\n        }\r\n\r\n        const indexesToRemove = [];\r\n        indexOrContainer.forEach(i => {\r\n            let container;\r\n            if (!isNaN(i)) {\r\n                container = this.options[i];\r\n            } else {\r\n                container = indexOrContainer;\r\n            }\r\n            const foundOption = this.options.find(o => o === container);\r\n            if (foundOption) {\r\n                indexesToRemove.push(this.options.indexOf(foundOption));\r\n\r\n                if(foundOption && foundOption.parent === this.po) {\r\n                    this.po.removeChild(foundOption);\r\n                }\r\n                if(destroyItem) {\r\n                    foundOption.destroy({ children: true })\r\n                }\r\n            }\r\n        });\r\n        if(indexesToRemove.length) {\r\n            this.options = this.options.filter((o, i) => {\r\n                return !(indexesToRemove.includes(i));\r\n            });\r\n\r\n            if(this._currentScroll > this.maxHeight - this.__height) {\r\n                this.currentScroll = this.maxHeight - this.__height;\r\n            }\r\n            this.recalculateHeight();\r\n            this.repositionOptions();\r\n            this.adjustVisibility(null, true);\r\n            this.redraw();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    private findOptionAtPoint(p) : PIXI.Container {\r\n        for(let i = this.startingVisibleChildIndex; i <= this.endingVisibleChildIndex; i++) {\r\n            const opt : PIXI.Container = this.options[i];\r\n            if(opt.visible && this._containsPoint(opt, p)) {\r\n                return opt;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    private recurseChildren(el, point, foundChildren) {\r\n        if(el.interactive || el.interactiveChildren) {\r\n            if(this._containsPoint(el, point)) {\r\n                if(el.interactive) {\r\n                    foundChildren.push(el);\r\n                }\r\n                if(el.interactiveChildren && el.children) {\r\n                    el.children.forEach(child => {\r\n                        this.recurseChildren(child, point, foundChildren);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return foundChildren;\r\n    }\r\n}\r\n","/*\r\nEasing Types extracted from tween.js\r\nhttps://github.com/tweenjs/tween.js\r\n\r\nAvailable functions can be referenced by name, or by name.In, name.Out, and name.InOut\r\n\r\nlinear, quadratic, cubic, quartic, quintic, sinusoidal, exponential, circular, elastic, back, bounce\r\n*/\r\n\r\nexport interface EasingFunction {\r\n  (k: number): number;\r\n  In?: (k: number) => number;\r\n  Out?: (k: number) => number;\r\n  InOut?: (k: number) => number;\r\n}\r\n\r\nexport interface EasingFunctions {\r\n  [key: string]: EasingFunction;\r\n}\r\n\r\nconst Bounce = {\r\n  In: function(k: number): number {\r\n    return 1 - Bounce.Out(1 - k);\r\n  },\r\n  Out: function(k: number): number {\r\n    if (k < (1 / 2.75)) {\r\n      return 7.5625 * k * k;\r\n    } else if (k < (2 / 2.75)) {\r\n      return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n    } else if (k < (2.5 / 2.75)) {\r\n      return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n    } else {\r\n      return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n    }\r\n  },\r\n  InOut: function(k: number): number {\r\n    if (k < 0.5) {\r\n      return Bounce.In(k * 2) * 0.5;\r\n    }\r\n    return Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n  }\r\n};\r\n\r\nconst easingFunctions: Record<string, Record<string, EasingFunction>> = {\r\n  linear: {\r\n    In: function(k: number): number {\r\n      return k;\r\n    },\r\n    Out: function(k: number): number {\r\n      return k;\r\n    },\r\n    InOut: function(k: number): number {\r\n      return k;\r\n    }\r\n  },\r\n  quadratic: {\r\n    In: function(k: number): number {\r\n      return k * k;\r\n    },\r\n    Out: function(k: number): number {\r\n      return k * (2 - k);\r\n    },\r\n    InOut: function(k: number): number {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k;\r\n      }\r\n      return -0.5 * (--k * (k - 2) - 1);\r\n    }\r\n  },\r\n  cubic: {\r\n    In: function(k: number): number {\r\n      return k * k * k;\r\n    },\r\n    Out: function(k: number): number {\r\n      return --k * k * k + 1;\r\n    },\r\n    InOut: function(k: number): number {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k * k;\r\n      }\r\n      return 0.5 * ((k -= 2) * k * k + 2);\r\n    }\r\n  },\r\n  quartic: {\r\n    In: function(k: number): number {\r\n      return k * k * k * k;\r\n    },\r\n    Out: function(k: number): number {\r\n      return 1 - (--k * k * k * k);\r\n    },\r\n    InOut: function(k: number): number {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k * k * k;\r\n      }\r\n      return -0.5 * ((k -= 2) * k * k * k - 2);\r\n    }\r\n  },\r\n  quintic: {\r\n    In: function(k: number): number {\r\n      return k * k * k * k * k;\r\n    },\r\n    Out: function(k: number): number {\r\n      return --k * k * k * k * k + 1;\r\n    },\r\n    InOut: function(k: number): number {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k * k * k * k;\r\n      }\r\n      return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n    }\r\n  },\r\n  sinusoidal: {\r\n    In: function(k: number): number {\r\n      return 1 - Math.cos(k * Math.PI / 2);\r\n    },\r\n    Out: function(k: number): number {\r\n      return Math.sin(k * Math.PI / 2);\r\n    },\r\n    InOut: function(k: number): number {\r\n      return 0.5 * (1 - Math.cos(Math.PI * k));\r\n    }\r\n  },\r\n  exponential: {\r\n    In: function(k: number): number {\r\n      return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n    },\r\n    Out: function(k: number): number {\r\n      return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n    },\r\n    InOut: function(k: number): number {\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * Math.pow(1024, k - 1);\r\n      }\r\n      return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n    }\r\n  },\r\n  circular: {\r\n    In: function(k: number): number {\r\n      return 1 - Math.sqrt(1 - k * k);\r\n    },\r\n    Out: function(k: number): number {\r\n      return Math.sqrt(1 - (--k * k));\r\n    },\r\n    InOut: function(k: number): number {\r\n      if ((k *= 2) < 1) {\r\n        return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n      }\r\n      return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n    }\r\n  },\r\n  elastic: {\r\n    In: function(k: number): number {\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n      return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n    },\r\n    Out: function(k: number): number {\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n      return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n    },\r\n    InOut: function(k: number): number {\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n      k *= 2;\r\n      if (k < 1) {\r\n        return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n      }\r\n      return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n    }\r\n  },\r\n  back: {\r\n    In: function(k: number): number {\r\n      const s = 1.70158;\r\n      return k * k * ((s + 1) * k - s);\r\n    },\r\n    Out: function(k: number): number {\r\n      const s = 1.70158;\r\n      return --k * k * ((s + 1) * k + s) + 1;\r\n    },\r\n    InOut: function(k: number): number {\r\n      const s = 1.70158 * 1.525;\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * (k * k * ((s + 1) * k - s));\r\n      }\r\n      return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n    }\r\n  },\r\n  bounce: Bounce\r\n};\r\n\r\n// Apply shorthand to each easing function\r\nconst processedEasingFunctions: EasingFunctions = {};\r\n\r\nObject.keys(easingFunctions).forEach(key => {\r\n  const easingGroup = easingFunctions[key];\r\n  const mainFunction = easingGroup.InOut;\r\n  \r\n  // Add In, Out, InOut properties to the main function\r\n  mainFunction.In = easingGroup.In;\r\n  mainFunction.Out = easingGroup.Out;\r\n  mainFunction.InOut = easingGroup.InOut;\r\n  \r\n  // Add the main function to the processed functions\r\n  processedEasingFunctions[key] = mainFunction;\r\n});\r\n\r\nexport default processedEasingFunctions;","import easingFunctions, { EasingFunction } from './easingFunctions';\r\n\r\n/**\r\n * Parse easing name into array\r\n * example: `cubic` becomes ['cubic']\r\n * example: `cubicInOut' becomes ['cubic', 'InOut']\r\n */\r\nfunction parseName(name: string): string[] {\r\n  const tests = [/InOut$/, /In$/, /Out$/];\r\n  \r\n  for (const regex of tests) {\r\n    const match = regex.exec(name);\r\n    if (match) {\r\n      return [name.substr(0, match.index), match[0]];\r\n    }\r\n  }\r\n  \r\n  return [name];\r\n}\r\n\r\n/**\r\n * Return easing function given a name like 'cubicInOut'\r\n */\r\nfunction getEasing(name: string): EasingFunction {\r\n  const path = parseName(name);\r\n  \r\n  if (!easingFunctions[path[0]]) {\r\n    // Return linear function as default if easing not found\r\n    return easingFunctions.linear;\r\n  }\r\n  \r\n  if (path.length === 1) {\r\n    return easingFunctions[path[0]];\r\n  }\r\n  \r\n  const easingGroup = easingFunctions[path[0]];\r\n  return easingGroup[path[1] as keyof EasingFunction] || easingGroup;\r\n}\r\n\r\nexport default getEasing;","export class Color {\r\n  private r: number = 0;\r\n  private g: number = 0;\r\n  private b: number = 0;\r\n  private a: number = 1;\r\n\r\n  constructor(value?: string | number | Color | number[]) {\r\n    if (value === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      this.parseColorString(value);\r\n    } else if (typeof value === 'number') {\r\n      this.parseHex(value);\r\n    } else if (Array.isArray(value)) {\r\n      this.setRgb(value);\r\n    } else if (value instanceof Color) {\r\n      this.r = value.r;\r\n      this.g = value.g;\r\n      this.b = value.b;\r\n      this.a = value.a;\r\n    }\r\n  }\r\n\r\n  private parseColorString(color: string): void {\r\n    // Handle hex\r\n    if (color.startsWith('#')) {\r\n      this.parseHexString(color);\r\n      return;\r\n    }\r\n\r\n    // Handle rgb/rgba\r\n    if (color.startsWith('rgb')) {\r\n      this.parseRgbString(color);\r\n      return;\r\n    }\r\n\r\n    // Default to black if format not recognized\r\n    this.r = 0;\r\n    this.g = 0;\r\n    this.b = 0;\r\n    this.a = 1;\r\n  }\r\n\r\n  private parseHexString(hex: string): void {\r\n    // Remove the hash\r\n    hex = hex.replace('#', '');\r\n\r\n    // Handle shorthand hex (#RGB)\r\n    if (hex.length === 3) {\r\n      this.r = parseInt(hex[0] + hex[0], 16);\r\n      this.g = parseInt(hex[1] + hex[1], 16);\r\n      this.b = parseInt(hex[2] + hex[2], 16);\r\n      this.a = 1;\r\n      return;\r\n    }\r\n\r\n    // Handle standard hex (#RRGGBB)\r\n    if (hex.length === 6) {\r\n      this.r = parseInt(hex.substring(0, 2), 16);\r\n      this.g = parseInt(hex.substring(2, 4), 16);\r\n      this.b = parseInt(hex.substring(4, 6), 16);\r\n      this.a = 1;\r\n      return;\r\n    }\r\n\r\n    // Handle hex with alpha (#RRGGBBAA)\r\n    if (hex.length === 8) {\r\n      this.r = parseInt(hex.substring(0, 2), 16);\r\n      this.g = parseInt(hex.substring(2, 4), 16);\r\n      this.b = parseInt(hex.substring(4, 6), 16);\r\n      this.a = parseInt(hex.substring(6, 8), 16) / 255;\r\n      return;\r\n    }\r\n  }\r\n\r\n  private parseHex(hex: number): void {\r\n    this.r = (hex >> 16) & 0xFF;\r\n    this.g = (hex >> 8) & 0xFF;\r\n    this.b = hex & 0xFF;\r\n    this.a = 1;\r\n  }\r\n\r\n  private parseRgbString(rgb: string): void {\r\n    // Extract numbers from rgb(r, g, b) or rgba(r, g, b, a)\r\n    const values = rgb.match(/\\d+(\\.\\d+)?/g);\r\n    \r\n    if (values && values.length >= 3) {\r\n      this.r = parseInt(values[0], 10);\r\n      this.g = parseInt(values[1], 10);\r\n      this.b = parseInt(values[2], 10);\r\n      this.a = values.length >= 4 ? parseFloat(values[3]) : 1;\r\n    } else {\r\n      // Default to black if parsing fails\r\n      this.r = 0;\r\n      this.g = 0;\r\n      this.b = 0;\r\n      this.a = 1;\r\n    }\r\n  }\r\n\r\n  public rgb(): Color {\r\n    return this;\r\n  }\r\n\r\n  public array(): number[] {\r\n    return [this.r, this.g, this.b];\r\n  }\r\n\r\n  public hex(): string {\r\n    const r = this.padZero(this.r.toString(16));\r\n    const g = this.padZero(this.g.toString(16));\r\n    const b = this.padZero(this.b.toString(16));\r\n    return `#${r}${g}${b}`;\r\n  }\r\n  \r\n  private padZero(str: string): string {\r\n    return str.length === 1 ? '0' + str : str;\r\n  }\r\n\r\n  public toString(): string {\r\n    if (this.a < 1) {\r\n      return `rgba(${Math.round(this.r)}, ${Math.round(this.g)}, ${Math.round(this.b)}, ${this.a})`;\r\n    }\r\n    return `rgb(${Math.round(this.r)}, ${Math.round(this.g)}, ${Math.round(this.b)})`;\r\n  }\r\n\r\n  public setRgb(values: number[]): Color {\r\n    if (values.length >= 3) {\r\n      this.r = values[0];\r\n      this.g = values[1];\r\n      this.b = values[2];\r\n      if (values.length >= 4) {\r\n        this.a = values[3];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // Static helper methods\r\n  public static rgb(values: number[]): Color {\r\n    return new Color(values);\r\n  }\r\n}\r\n\r\nexport default Color;","import getEasing from './easing';\r\nimport Color from './color';\r\n\r\ninterface TweenParams {\r\n  updater: (color: Color | Color[], progress: number) => void;\r\n  ender: (color: Color | Color[]) => void;\r\n  length: number;\r\n  startTime?: number;\r\n  easing: (k: number) => number;\r\n}\r\n\r\ninterface FrameResult {\r\n  frame: Color | Color[];\r\n  progress: number;\r\n}\r\n\r\nexport class ColorTween {\r\n  private startColors: Color[];\r\n  private endColors: Color[];\r\n  private params: TweenParams;\r\n  \r\n  constructor(startColorStrings: string[], endColorStrings: string[]) {\r\n    this.startColors = startColorStrings.map(color => new Color(color));\r\n    this.endColors = endColorStrings.map(color => new Color(color));\r\n    \r\n    this.params = {\r\n      updater: () => {},\r\n      ender: () => {},\r\n      length: 1000,\r\n      easing: getEasing('linear')\r\n    };\r\n  }\r\n\r\n  onUpdate(callback: (colors: Color | Color[], progress: number) => void): ColorTween {\r\n    this.params.updater = callback;\r\n    return this;\r\n  }\r\n\r\n  onEnd(callback: (colors: Color | Color[]) => void): ColorTween {\r\n    this.params.ender = callback;\r\n    return this;\r\n  }\r\n\r\n  duration(length: number): ColorTween {\r\n    this.params.length = length;\r\n    return this;\r\n  }\r\n\r\n  easing(name: string): ColorTween {\r\n    this.params.easing = getEasing(name);\r\n    return this;\r\n  }\r\n\r\n  start(callback?: () => void): ColorTween {\r\n    this.params.startTime = Date.now();\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  update(): boolean {\r\n    if (this.params.startTime) {\r\n      const frame = this.renderFrame();\r\n      if (frame.progress >= 1) {\r\n        this.done();\r\n        return false;\r\n      } else {\r\n        this.params.updater(frame.frame, frame.progress);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private renderFrame(): FrameResult {\r\n    const pos = Date.now() - (this.params.startTime || 0);\r\n    const percent = pos / this.params.length;\r\n    const frames = this.endColors.map((endColor, i) => {\r\n      const startColor = this.startColors[i];\r\n      const startRGB = startColor.array();\r\n      const endRGB = endColor.array();\r\n      const frameColor = endRGB.map((val, j) => {\r\n        const interpolated = startRGB[j] + (val - startRGB[j]) * this.params.easing(percent);\r\n        return Math.round(interpolated);\r\n      });\r\n      return new Color(frameColor);\r\n    });\r\n    \r\n    return {\r\n      frame: frames.length === 1 ? frames[0] : frames,\r\n      progress: percent\r\n    };\r\n  }\r\n\r\n  private done(): ColorTween {\r\n    const endColorResult = this.endColors.length === 1 ? this.endColors[0] : this.endColors;\r\n    this.params.updater(endColorResult, 1);\r\n    this.stop();\r\n    return this;\r\n  }\r\n\r\n  stop(): ColorTween {\r\n    const endColorResult = this.endColors.length === 1 ? this.endColors[0] : this.endColors;\r\n    this.params.startTime = undefined;\r\n    this.params.ender(endColorResult);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default ColorTween;","export const GLOBAL_PIXI_DTA_PROPERTY_KEY = \"__pixi-dom-dynamic-texture-atlas\";\r\nexport type PixiRectLike = { x: number, y: number, width: number, height: number, parent?: { width: number, height: number } }\r\n\r\ntype MeasurementUnit = 'px' | '%' | 'percent' | 'pixel' | 'pixels'\r\n\r\nexport type ParsedMeasurement = {\r\n  valid: boolean,\r\n  error?: string,\r\n  value?: number,\r\n  type?: 'percent' | 'pixel'\r\n}\r\n\r\nexport type ValidMeasurement = {\r\n    value: number,\r\n    type: MeasurementUnit\r\n} | number | string\r\n\r\nexport type FlexOptions = {\r\n    flexDirection?: FlexDirection,\r\n    flexWrap?: FlexWrap,\r\n    justifyContent?: JustifyContent,\r\n}\r\n\r\nexport enum JustifyContent {\r\n    flexStart = \"flex-start\",\r\n    flexEnd = \"flex-end\",\r\n    center = \"center\",\r\n    spaceBetween = \"spaceBetween\",\r\n    spaceAround = \"spaceAround\",\r\n    spaceEvenly = \"spaceEvenly\",\r\n}\r\n\r\nexport enum FlexDirection {\r\n    row = \"row\",\r\n    row_reverse = \"row-reverse\",\r\n    column = \"column\",\r\n    column_reverse = \"column-reverse\"\r\n}\r\n\r\nexport enum FlexWrap {\r\n    nowrap = \"nowrap\",\r\n    wrap = \"wrap\",\r\n    wrap_reverse = \"wrap-reverse\"\r\n}\r\n\r\nexport type InputStyleOptions = {\r\n    width?: ValidMeasurement,\r\n    height?: ValidMeasurement,\r\n    cursorHeight: ValidMeasurement,\r\n    cursorWidth: number,\r\n    borderWidth?: number,\r\n    borderColor?: number,\r\n    fontColor: number,\r\n    highlightedFontColor: number,\r\n    cursorColor: number,\r\n    backgroundColor: number,\r\n    highlightedBackgroundColor: number,\r\n    borderOpacity: number,\r\n    xPadding: number,\r\n    yPadding: number,\r\n}\r\n\r\nexport type InputStyleOptionsParams = {\r\n    width?: number | string,\r\n    height?: number | string,\r\n    borderWidth?: number,\r\n    borderColor?: number,\r\n    fontColor?: number,\r\n    highlightedFontColor?: number,\r\n    cursorColor?: number,\r\n    cursorHeight?: number | string,\r\n    cursorWidth: number,\r\n    backgroundColor?: number,\r\n    highlightedBackgroundColor?: number,\r\n    borderOpacity?: number,\r\n    xPadding?: number,\r\n    yPadding?: number,\r\n}\r\n\r\nexport type LabelOptions = {\r\n    onLabel: string,\r\n    onColor: number,\r\n    offLabel: string,\r\n    offColor: number,\r\n    fontName: string,\r\n}\r\n\r\nexport enum AnimationType {\r\n    LINEAR = 'linear',\r\n    QUADRATIC = 'quadtratic',\r\n    CUBIC = 'cubic',\r\n    QUARTIC = \"quartic\",\r\n    QUINTIC = \"quintic\",\r\n    SINUSOIDAL = \"sinusoidal\",\r\n    EXPONENTIAL = \"exponential\",\r\n    CIRCULAR = \"circular\",\r\n    ELASTIC = \"elastic\",\r\n    BACK = \"back\",\r\n}\r\n\r\nexport type AnimationOptions = {\r\n    type: AnimationType,\r\n    duration: number,\r\n    exclude?: Array<string>\r\n}\r\n\r\nexport enum ToggleAnimationExclusions {\r\n    background = 'background',\r\n    circle_color = 'circle_color',\r\n    circle_position = 'circle_position',\r\n    label = 'label',\r\n}\r\n\r\nexport type OutlineOptions = {\r\n    width: number,\r\n    color: number,\r\n}\r\n\r\nexport type ToggleOptions = {\r\n    width: number,\r\n    height: number,\r\n    borderRadius: number,\r\n    onCircleColor: number,\r\n    offCircleColor: number,\r\n    onBackgroundColor: number,\r\n    offBackgroundColor: number,\r\n    onToggleColor: number,\r\n    offToggleColor: number,\r\n    backgroundOutline?: OutlineOptions,\r\n    labelOptions?: LabelOptions,\r\n    animationOptions?: AnimationOptions,\r\n    circlePadding?: number,\r\n}\r\n","import { string2hex } from \"../utils\";\r\n\r\nimport { ColorTween } from '../tween/colorTween';\r\n\r\nconst DEFAULT_CIRCLE_PADDING = 2;\r\n\r\nimport { ToggleOptions, AnimationType, OutlineOptions, LabelOptions, AnimationOptions, ToggleAnimationExclusions } from \"../types\";\r\n\r\nexport class Toggle extends PIXI.Container {\r\n    private _toggled: boolean = true;\r\n    private backgroundGraphic: PIXI.Graphics;\r\n    private circleGraphic: PIXI.Graphics;\r\n    private options: ToggleOptions;\r\n    private circleRadius: number;\r\n    private computedBorderRadius: number;\r\n\r\n    private onText: PIXI.extras.BitmapText;\r\n    private offText: PIXI.extras.BitmapText;\r\n    private usingLabels: boolean = false;\r\n    private updateToggle: Function;\r\n\r\n    private _activeBackgroundColor;\r\n    private _inactiveBackgroundColor;\r\n    private _activeCircleColor;\r\n    private _inactiveCircleColor;\r\n    private _travelToX;\r\n\r\n    private tween: any;\r\n\r\n    private backgroundColorsArrayIndex: number = null;\r\n    private circleColorsArrayIndex: number = null;\r\n\r\n    private toggleCircleTravelDistance: number = 0;\r\n    private circlePadding: number = DEFAULT_CIRCLE_PADDING;\r\n\r\n    constructor(options: ToggleOptions, isToggled?: boolean) {\r\n        super();\r\n        this.circlePadding = options.circlePadding ?? DEFAULT_CIRCLE_PADDING;\r\n        this.options = options;\r\n        this.backgroundGraphic = new PIXI.Graphics();\r\n        const borderRadius = options.borderRadius ? options.borderRadius : 50;\r\n        options.borderRadius = borderRadius;\r\n        this.computedBorderRadius = (options.borderRadius / 100) * options.height;\r\n\r\n        this.backgroundGraphic.drawRoundedRect(0, 0, options.width, options.height, this.computedBorderRadius);\r\n        this.addChild(this.backgroundGraphic);\r\n\r\n        if(options.labelOptions) {\r\n            const { fontName, onLabel, offLabel, onColor, offColor } = options.labelOptions;\r\n            this.onText = new PIXI.extras.BitmapText(onLabel, { font: fontName, align: \"left\" });\r\n            this.offText = new PIXI.extras.BitmapText(offLabel, { font: fontName, align: \"left\" });\r\n            this.addChild(this.onText);\r\n            this.addChild(this.offText);\r\n\r\n            this.onText.visible = false;\r\n            this.offText.visible = false;\r\n\r\n            const offXDiff = (options.width / 2) - this.offText.width;\r\n            if(offXDiff < 0) {throw new Error('Label for off text was too long')}\r\n            this.offText.x = ((options.width / 2)  + offXDiff / 2) - this.circlePadding;\r\n            this.offText.tint = offColor;\r\n\r\n            const offYDiff = options.height - this.offText.height;\r\n            if(offYDiff < 0) { throw new Error('Label font is too large to fit within height of toggle, either increase height or use smaller font')};\r\n            this.offText.y = offYDiff / 2;\r\n\r\n            const onXDiff = (options.width / 2) - this.onText.width;\r\n            if(onXDiff < 0) {throw new Error('Label for on text was too long')}\r\n            this.onText.x = this.circlePadding + onXDiff / 2;\r\n            this.onText.tint = onColor;\r\n\r\n            const onYDiff = options.height - this.onText.height;\r\n            if(onYDiff < 0) { throw new Error('Label font is too large to fit within height of toggle, either increase height or use smaller font')};\r\n            this.onText.y = offYDiff / 2;\r\n            this.usingLabels = true;\r\n        }\r\n\r\n        this.circleRadius = (this.options.height / 2) - this.circlePadding;\r\n        this.circleGraphic = new PIXI.Graphics();\r\n        this.circleGraphic.drawCircle(0, 0, this.circleRadius);\r\n\r\n        this.circleGraphic.y = this.circlePadding;\r\n\r\n        this.addChild(this.circleGraphic);\r\n\r\n        this.toggleCircleTravelDistance = Math.abs((this.circlePadding) -  (this.options.width - this.circleGraphic.width - this.circlePadding));\r\n\r\n        this.interactive = true;\r\n        this.buttonMode = true;\r\n        this.on('pointerdown', () => {\r\n            this.toggled = !this.toggled;\r\n        });\r\n        this.updateToggle = this.staticToggleUpdate.bind(this);\r\n        this.toggled = !!isToggled;\r\n        this.updateToggle = options.animationOptions ? this.animatedToggleUpdate.bind(this) : this.staticToggleUpdate.bind(this);\r\n    }\r\n\r\n    get activeBackgroundColor() {\r\n        return this.toggled ? this.options.onBackgroundColor : this.options.offBackgroundColor;\r\n    }\r\n\r\n    get inactiveBackgroundColor() {\r\n        return this.toggled ? this.options.offBackgroundColor : this.options.onBackgroundColor;\r\n    }\r\n\r\n    get activeCircleColor() {\r\n        return this.toggled ? this.options.onCircleColor : this.options.offCircleColor;\r\n    }\r\n\r\n    get inactiveCircleColor() {\r\n        return this.toggled ? this.options.offCircleColor : this.options.onCircleColor;\r\n    }\r\n\r\n    get activeTextLabel() {\r\n        return this.toggled ? this.onText : this.offText;\r\n    }\r\n\r\n    get inactiveTextLabel() {\r\n        return this.toggled ? this.offText : this.onText;\r\n    }\r\n\r\n    get travelToX() {\r\n        return this.toggled ? this.circlePadding : this.options.width - this.circleGraphic.width - this.circlePadding;\r\n    }\r\n\r\n    set toggled(val) {\r\n        this.emit('toggle-change', val);\r\n        this._toggled = val;\r\n\r\n        this.updateToggle();\r\n\r\n        //TODO: tween colors in interval with a delta\r\n    }\r\n\r\n    get toggled() {\r\n        return this._toggled;\r\n    }\r\n\r\n    public onToggle(callback) {\r\n        this.on('toggle-change', callback);\r\n    }\r\n\r\n    private animateToggle(delta) {\r\n        if(this.tween.update()) {\r\n            requestAnimationFrame(this.animateToggle.bind(this));\r\n        }\r\n    }\r\n\r\n    private midAnimationToggleUpdate(colors, progress) {\r\n        const traveledDistance = this.toggleCircleTravelDistance * progress;\r\n        const { exclude } = this.options.animationOptions;\r\n\r\n        if(this.usingLabels && (!exclude || !exclude.includes(ToggleAnimationExclusions.label))) {\r\n            this.activeTextLabel.visible = true;\r\n            this.inactiveTextLabel.visible = true;\r\n            this.inactiveTextLabel.alpha = 1 - progress;\r\n            this.activeTextLabel.alpha = progress;\r\n        }\r\n\r\n        if (this.backgroundColorsArrayIndex !== null) {\r\n            this.backgroundGraphic.clear();\r\n            if (this.options.hasOwnProperty('backgroundOutline')) {\r\n                const {width, color} = this.options.backgroundOutline;\r\n                this.backgroundGraphic.lineStyle(width, color);\r\n            }\r\n            this.backgroundGraphic.beginFill(string2hex(colors[this.backgroundColorsArrayIndex].hex()));\r\n            this.backgroundGraphic.drawRoundedRect(0, 0, this.options.width, this.options.height, this.computedBorderRadius);\r\n            this.backgroundGraphic.endFill();\r\n        }\r\n\r\n        if (!exclude || !exclude.includes(ToggleAnimationExclusions.circle_position)) {\r\n            if (this.toggled) {\r\n                this.circleGraphic.x = this.travelToX + traveledDistance;\r\n            } else {\r\n                this.circleGraphic.x = this.travelToX - traveledDistance;\r\n            }\r\n        };\r\n\r\n        if (this.circleColorsArrayIndex !== null) {\r\n            this.circleGraphic.clear();\r\n            this.circleGraphic.beginFill(string2hex(colors[this.circleColorsArrayIndex].hex()));\r\n            this.circleGraphic.drawCircle(this.circleRadius, this.circleRadius, this.circleRadius);\r\n            this.circleGraphic.endFill();\r\n        };\r\n    }\r\n\r\n    private animatedToggleUpdate() {\r\n        const activeColorsArray = [];\r\n        const inactiveColorsArray = [];\r\n        const { exclude } = this.options.animationOptions;\r\n\r\n        if(!exclude || !exclude.includes(ToggleAnimationExclusions.background)) {\r\n            activeColorsArray.push(PIXI.utils.hex2string(this.activeBackgroundColor));\r\n            inactiveColorsArray.push(PIXI.utils.hex2string(this.inactiveBackgroundColor));\r\n            this.backgroundColorsArrayIndex = 0;\r\n        }\r\n        if(!exclude || !exclude.includes(ToggleAnimationExclusions.circle_color)) {\r\n            activeColorsArray.push(PIXI.utils.hex2string(this.activeCircleColor));\r\n            inactiveColorsArray.push(PIXI.utils.hex2string(this.inactiveCircleColor));\r\n            this.circleColorsArrayIndex = activeColorsArray.length - 1;\r\n        }\r\n        this.tween = new ColorTween(inactiveColorsArray, activeColorsArray)\r\n            .duration(this.options.animationOptions.duration)\r\n            .easing(this.options.animationOptions.type)\r\n            .onUpdate(this.midAnimationToggleUpdate.bind(this))\r\n            .onEnd(this.staticToggleUpdate.bind(this))\r\n            .start(this.animateToggle.bind(this));\r\n    }\r\n\r\n    private staticToggleUpdate() {\r\n        this.backgroundGraphic.clear();\r\n        if(this.options.hasOwnProperty('backgroundOutline')) {\r\n            const { width, color } = this.options.backgroundOutline;\r\n            this.backgroundGraphic.lineStyle(width, color);\r\n        }\r\n        // when its to the right were toggled/on so use options/width to calculate for now\\\r\n        let xPosition;\r\n        let circleColor;\r\n        let backgroundColor;\r\n\r\n        if(this._toggled) {\r\n            backgroundColor = this.options.onBackgroundColor;\r\n            xPosition = this.options.width - this.circleGraphic.width - this.circlePadding;\r\n            circleColor =  this.options.onCircleColor;\r\n            this._showOnText();\r\n        } else {\r\n            backgroundColor =  this.options.offBackgroundColor;\r\n            xPosition =  0 + this.circlePadding;\r\n            circleColor = this.options.offCircleColor;\r\n            this._showOffText();\r\n        }\r\n\r\n        this.backgroundGraphic.beginFill(backgroundColor);\r\n        this.backgroundGraphic.drawRoundedRect(0, 0, this.options.width, this.options.height, this.computedBorderRadius);\r\n        this.backgroundGraphic.endFill();\r\n\r\n        this.circleGraphic.clear();\r\n        this.circleGraphic.beginFill(circleColor);\r\n        this.circleGraphic.drawCircle(this.circleRadius, this.circleRadius, this.circleRadius);\r\n        this.circleGraphic.endFill();\r\n        this.circleGraphic.x = xPosition;\r\n    }\r\n\r\n    private _showOnText() {\r\n        if(this.usingLabels) {\r\n            this.onText.visible = true;\r\n            this.offText.visible = false;\r\n        }\r\n    }\r\n\r\n    private _showOffText() {\r\n        if(this.usingLabels) {\r\n            this.onText.visible = false;\r\n            this.offText.visible = true;\r\n        }\r\n    }\r\n}","import { ValidMeasurement } from \"../types\";\r\nimport {parseLengthMeasurements} from \"../utils\";\r\nimport {StyleOptionsParams} from \"./TextInput/TextField\";\r\n\r\nimport { PixiElement } from \"../Element\";\r\n\r\nexport interface ButtonStyleStateOptions {\r\n    width?: number,\r\n    height?: number,\r\n    textColor?: number,\r\n    backgroundTexture?: PIXI.Texture,\r\n    backgroundOpacity?: number,\r\n    backgroundColor?: number,\r\n    borderColor?: number,\r\n    borderWidth?: number,\r\n    borderOpacity?: number,\r\n    borderRadius?: number,\r\n}\r\n\r\nexport interface ButtonStyleOptions {\r\n    useBitmapText: boolean,\r\n    fontSize?: number,\r\n    defaultStyle: ButtonStyleStateOptions,\r\n    hoverStyle?: ButtonStyleStateOptions,\r\n    pressedStyle?: ButtonStyleStateOptions,\r\n    font: string,\r\n}\r\n\r\nconst stateStylesToValidate = [\"hoverStyle\", \"defaultStyle\", \"pressedStyle\"];\r\n\r\nenum BtnState {\r\n    NONE,\r\n    HOVER,\r\n    PRESSED,\r\n}\r\n\r\nexport class Button extends PixiElement {\r\n    private _text: string;\r\n    private bitmapTxtSprite: PIXI.extras.BitmapText;\r\n    private txtSprite: PIXI.Text;\r\n    private bgGraphic: PIXI.Graphics;\r\n    private bgSprite: PIXI.Sprite;\r\n    private styleOptions: ButtonStyleOptions = { defaultStyle: {}, font: '', useBitmapText: true };\r\n    private _currentStyleState: ButtonStyleStateOptions;\r\n    private _btnState: BtnState = BtnState.NONE;\r\n    constructor(text: string, styleOptions: ButtonStyleOptions) {\r\n        super();\r\n        this._text = text;\r\n        this.interactive = true;\r\n        this.buttonMode = true;\r\n        this.on('pointerdown', () => this.btnState = BtnState.PRESSED);\r\n        this.on('pointerup', () => this.btnState = BtnState.NONE);\r\n        this.on('pointerupoutside', () => this.btnState = BtnState.NONE);\r\n        this.on('pointerover', () => this.btnState = BtnState.HOVER);\r\n        this.on('pointerout', () => this.btnState = BtnState.NONE);\r\n        this.updateStyle(styleOptions);\r\n    }\r\n\r\n    set btnState(newState) {\r\n        if(newState !== this._btnState) {\r\n            this._btnState = newState;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    set text(value) {\r\n        this._text = value;\r\n        this.redrawText();\r\n    }\r\n\r\n    public updateStyle(styleOptions: ButtonStyleOptions) {\r\n        Object.keys(styleOptions).forEach(key => {\r\n            this.styleOptions[key] = styleOptions[key];\r\n        });\r\n        this.styleOptions.useBitmapText = this.styleOptions.useBitmapText ?? false;\r\n        this.redraw();\r\n    }\r\n\r\n    public redraw() {\r\n        this.clear();\r\n        this.redrawBg();\r\n        this.redrawText();\r\n    }\r\n\r\n\r\n    public redrawText() {\r\n        let sprite;\r\n        if(this.styleOptions.useBitmapText) {\r\n            if(!this.bitmapTxtSprite) {\r\n                this.bitmapTxtSprite = new PIXI.extras.BitmapText('', {font: this.styleOptions.font, align: 'center'});\r\n            }\r\n            if(this.txtSprite) {\r\n                this.txtSprite.destroy();\r\n                this.txtSprite = null;\r\n            }\r\n            this.bitmapTxtSprite.maxWidth = this.width;\r\n            sprite = this.bitmapTxtSprite;\r\n        } else {\r\n            if(!this.txtSprite) {\r\n                this.txtSprite = new PIXI.Text('', {fontFamily: this.styleOptions.font, align: 'center'});\r\n            }\r\n            if(this.styleOptions.fontSize) {\r\n                this.txtSprite.style.fontSize = this.styleOptions.fontSize;\r\n            }\r\n            if(this.bitmapTxtSprite) {\r\n                this.bitmapTxtSprite.destroy({ children: true });\r\n                this.bitmapTxtSprite = null;\r\n            }\r\n            sprite = this.txtSprite;\r\n        }\r\n        if(this.currentStyleState.textColor || this.currentStyleState.textColor == 0) {\r\n            if(this.styleOptions.useBitmapText) {\r\n                this.bitmapTxtSprite.tint = this.currentStyleState.textColor;\r\n            } else {\r\n                this.txtSprite.style.fill = this.currentStyleState.textColor\r\n            }\r\n        }\r\n        if(!sprite.parent) {\r\n            this.addChild(sprite);\r\n        }\r\n        sprite.text = this._text;\r\n        sprite.x = this.currentStyleState.width / 2 - sprite.width / 2;\r\n        sprite.y = this.currentStyleState.height / 2 - sprite.height / 2;\r\n    }\r\n\r\n    get textSpriteUtilized() {\r\n        if(this.styleOptions.useBitmapText) return this.bitmapTxtSprite;\r\n        return this.txtSprite;\r\n    }\r\n\r\n    public redrawBg() {\r\n        let {backgroundColor, borderRadius, borderColor, borderWidth, width, height, backgroundTexture, backgroundOpacity, borderOpacity} = this.currentStyleState;\r\n        if(backgroundColor || backgroundColor == 0) {\r\n            if(!this.bgGraphic) {\r\n                this.bgGraphic = new PIXI.Graphics();\r\n            } else {\r\n                this.bgGraphic.clear();\r\n            }\r\n            if(!this.bgGraphic.parent) {\r\n                this.addChild(this.bgGraphic);\r\n            }\r\n            backgroundOpacity = backgroundOpacity || backgroundOpacity == 0 ? backgroundOpacity : 1;\r\n            this.bgGraphic.beginFill(backgroundColor, backgroundOpacity);\r\n            if(borderWidth) {\r\n                borderOpacity = borderOpacity || borderOpacity == 0 ? borderOpacity : 1;\r\n                this.bgGraphic.lineStyle(borderWidth, borderColor, borderOpacity);\r\n            }\r\n\r\n            if(borderRadius) {\r\n                const computedBorderRadius =  borderRadius / 100 * height;\r\n                this.bgGraphic.drawRoundedRect(0, 0, width, height, computedBorderRadius);\r\n            } else {\r\n                this.bgGraphic.drawRect(0, 0, width, height);\r\n            }\r\n            this.bgGraphic.endFill();\r\n        }\r\n\r\n        if(backgroundTexture) {\r\n            if(!this.bgSprite) {\r\n                this.bgSprite = new PIXI.Sprite();\r\n            }\r\n            if(!this.bgSprite.parent) {\r\n                this.addChild(this.bgGraphic);\r\n            }\r\n            this.bgSprite.texture = backgroundTexture;\r\n            this.bgSprite.x = width / 2 - this.bgSprite.x / 2;\r\n            this.bgSprite.y = height / 2 - this.bgSprite.y / 2;\r\n        }\r\n        this.hitArea = new PIXI.Rectangle(0, 0, width, height);\r\n    }\r\n\r\n    private clear() {\r\n        if(this.textSpriteUtilized) {\r\n            this.removeChild(this.textSpriteUtilized);\r\n            this.textSpriteUtilized.destroy({ children: true });\r\n            this.bitmapTxtSprite = null;\r\n            this.txtSprite = null;\r\n        }\r\n        if(this.bgGraphic) {\r\n            this.removeChild(this.bgGraphic);\r\n            this.bgGraphic.destroy();\r\n            this.bgGraphic = null;\r\n        }\r\n        if(this.bgSprite) {\r\n            this.removeChild(this.bgSprite);\r\n            this.bgSprite.destroy();\r\n            this.bgSprite = null;\r\n        }\r\n    }\r\n\r\n    get currentStyleState() {\r\n        switch(this._btnState) {\r\n            case BtnState.NONE:\r\n                return this.styleOptions.defaultStyle;\r\n                break;\r\n            case BtnState.HOVER:\r\n                return this.styleOptions.hoverStyle ? this.styleOptions.hoverStyle : this.styleOptions.defaultStyle;\r\n                break;\r\n            case BtnState.PRESSED:\r\n                // cascade to check if we have pressedStyle defined, if so use it, otherwise use hover, otherwise use default\r\n                return this.styleOptions.pressedStyle ? this.styleOptions.pressedStyle :\r\n                    this.styleOptions.hoverStyle ? this.styleOptions.hoverStyle :\r\n                        this.styleOptions.defaultStyle;\r\n                break;\r\n        }\r\n    }\r\n}","import { centerPixiObject } from \"../utils\";\r\n\r\ntype SliderOptions = {\r\n  startingValue: number;\r\n  minValue: number;\r\n  maxValue: number;\r\n  width: number;\r\n  height: number;\r\n  circleRadius: number;\r\n  preventScaleAdjustment?: boolean;\r\n  circleOpacity?: number;\r\n  down?: {\r\n      circleOpacity?: number;\r\n      circleRadius?: number;\r\n      circleColor?: number;\r\n      circleOutlineWidth?: number;\r\n      circleOutlineColor?: number;\r\n      circleOutlineOpacity?: number;\r\n  };\r\n  hover?: {\r\n      circleOpacity?: number;\r\n      circleRadius?: number;\r\n      circleColor?: number;\r\n      circleOutlineWidth?: number;\r\n      circleOutlineColor?: number;\r\n      circleOutlineOpacity?: number;\r\n  };\r\n  activeColor: number;\r\n  inactiveColor: number;\r\n  opacity?: number;\r\n  circleColor?: number;\r\n  circleOutlineWidth?: number;\r\n  circleOutlineColor?: number;\r\n  circleOutlineOpacity?: number;\r\n}\r\n\r\nclass Slider extends PIXI.Container {\r\n  isDragging: boolean;\r\n  isHovered: boolean;\r\n  curOutlineWidth: number;\r\n  lastX: number;\r\n  resolvedScale: { x: number; y: number; } | null;\r\n  options: SliderOptions;\r\n  currentValue: number;\r\n  backgroundGraphic: PIXI.Graphics;\r\n  circleRadius: number;\r\n  circleGraphic: PIXI.Graphics;\r\n\r\n  constructor(t: SliderOptions) { // You need to define the type of 't'\r\n      super();\r\n      this.isDragging = false;\r\n      this.isHovered = false;\r\n      this.curOutlineWidth = 0;\r\n      this.lastX = 0;\r\n      this.resolvedScale = null;\r\n      this.options = t;\r\n      this.currentValue = this.options.startingValue;\r\n\r\n      this.backgroundGraphic = new PIXI.Graphics();\r\n      super.addChild(this.backgroundGraphic);\r\n\r\n      this.circleRadius = this.options.circleRadius;\r\n\r\n      this.circleGraphic = new PIXI.Graphics();\r\n      this.circleGraphic.drawCircle(0, this.circleRadius, this.circleRadius);\r\n      this.circleGraphic.y = 0;\r\n      this.circleGraphic.buttonMode = true;\r\n      super.addChild(this.circleGraphic);\r\n      this.circleGraphic.interactive = true;\r\n\r\n      const e = (this.currentValue - this.options.minValue) / (this.options.maxValue - this.options.minValue);\r\n      this.circleGraphic.x = e * this.options.width;\r\n\r\n      this.redrawCircle();\r\n      this.redrawBar();\r\n\r\n      this.circleGraphic.on(\"pointerover\", t => {\r\n          this.isHovered = true;\r\n          this.redrawCircle();\r\n      });\r\n\r\n      this.circleGraphic.on(\"pointerout\", () => {\r\n          if (this.isHovered) {\r\n              this.isHovered = false;\r\n              if (!this.isDragging) {\r\n                  this.redrawCircle();\r\n              }\r\n          }\r\n      });\r\n\r\n      this.circleGraphic.on(\"pointerdown\", t => {\r\n          this.resolvedScale = null;\r\n          this.resolveScale();\r\n          this.isDragging = true;\r\n          this.lastX = t.data.global.x;\r\n          this.redrawCircle();\r\n      });\r\n\r\n      this.circleGraphic.on(\"pointercancel\", () => {\r\n          if (this.isDragging) {\r\n              this.resolvedScale = null;\r\n              this.isDragging = false;\r\n              this.redrawCircle();\r\n          }\r\n      });\r\n\r\n      this.circleGraphic.on(\"pointerup\", () => {\r\n          if (this.isDragging) {\r\n              this.resolvedScale = null;\r\n              this.isDragging = false;\r\n              this.redrawCircle();\r\n          }\r\n      });\r\n\r\n      this.circleGraphic.on(\"pointerupoutside\", () => {\r\n          if (this.isDragging) {\r\n              this.resolvedScale = null;\r\n              this.isDragging = false;\r\n              this.redrawCircle();\r\n          }\r\n      });\r\n\r\n      this.circleGraphic.on(\"pointermove\", t => {\r\n          if (!this.isDragging) return;\r\n\r\n          let e = t.data.global.x - this.lastX;\r\n          const i = this.options.preventScaleAdjustment ? 1 : this.resolveScale().x;\r\n\r\n          e *= i;\r\n\r\n          if ((e < 0 && t.data.global.x * i < this.x && this.circleGraphic.x === 0) || (e > 0 && t.data.global.x * i > this.options.width && this.circleGraphic.x === this.options.width)) return;\r\n\r\n          this.lastX = t.data.global.x;\r\n\r\n          const r = this.circleGraphic.x;\r\n          this.circleGraphic.x += e;\r\n          this.circleGraphic.x = Math.max(0, Math.min(this.circleGraphic.x, this.options.width));\r\n\r\n          if (this.circleGraphic.x - r) {\r\n              this.currentValue = this.calculateValue();\r\n              this.redrawBar();\r\n              super.emit(\"slider-change\", this.currentValue);\r\n          }\r\n      });\r\n  }\r\n\r\n  resolveScale() {\r\n      if (this.resolvedScale) return this.resolvedScale;\r\n\r\n      let t = 1 / this.scale.x, e = 1 / this.scale.y, i = this.parent;\r\n\r\n      for (; i;) {\r\n          t /= i.scale.x;\r\n          e /= i.scale.y;\r\n          i = i.parent;\r\n      }\r\n\r\n      return this.resolvedScale = { x: t, y: e };\r\n  }\r\n\r\n  calculateValue() {\r\n      const { maxValue, minValue, width } = this.options;\r\n      const s = this.circleGraphic.x / width;\r\n      return lerp(minValue, maxValue, s);\r\n  }\r\n\r\n  redrawCircle() {\r\n    this.circleGraphic.clear();\r\n    let circleOpacity = this.options.circleOpacity || 1;\r\n    if (this.isDragging && this.options.down?.circleOpacity) {\r\n        circleOpacity = this.options.down.circleOpacity;\r\n    } else if (this.isHovered && this.options.hover?.circleOpacity) {\r\n        circleOpacity = this.options.hover.circleOpacity;\r\n    }\r\n    let circleRadius = this.options.circleRadius;\r\n    if (this.isDragging && this.options.down?.circleRadius) {\r\n        circleRadius = this.options.down.circleRadius;\r\n    } else if (this.isHovered && this.options.hover?.circleRadius) {\r\n        circleRadius = this.options.hover.circleRadius;\r\n    }\r\n    let circleColor = this.options.circleColor;\r\n    if (this.isDragging && this.options.down?.circleColor) {\r\n        circleColor = this.options.down.circleColor;\r\n    } else if (this.isHovered && this.options.hover?.circleColor) {\r\n        circleColor = this.options.hover.circleColor;\r\n    }\r\n    let circleOutlineWidth = 0;\r\n    if (this.isDragging && this.options.down?.circleOutlineWidth) {\r\n        circleOutlineWidth = this.options.down.circleOutlineWidth;\r\n    } else if (this.isHovered && this.options.hover?.circleOutlineWidth) {\r\n        circleOutlineWidth = this.options.hover.circleOutlineWidth;\r\n    } else if (this.options.circleOutlineWidth) {\r\n        circleOutlineWidth = this.options.circleOutlineWidth;\r\n    }\r\n    let circleOutlineColor = this.options.circleOutlineColor || 0x000000;\r\n    if (this.isDragging && this.options.down?.circleOutlineColor) {\r\n        circleOutlineColor = this.options.down.circleOutlineColor;\r\n    } else if (this.isHovered && this.options.hover?.circleOutlineColor) {\r\n        circleOutlineColor = this.options.hover.circleOutlineColor;\r\n    }\r\n    let circleOutlineOpacity = this.options.circleOutlineOpacity || 1;\r\n    if (this.isDragging && this.options.down?.circleOutlineOpacity) {\r\n        circleOutlineOpacity = this.options.down.circleOutlineOpacity;\r\n    } else if (this.isHovered && this.options.hover?.circleOutlineOpacity) {\r\n        circleOutlineOpacity = this.options.hover.circleOutlineOpacity;\r\n    }\r\n\r\n    this.circleGraphic.lineStyle(circleOutlineWidth, circleOutlineColor, circleOutlineOpacity);\r\n    this.circleGraphic.beginFill(circleColor, circleOpacity);\r\n    this.circleGraphic.drawCircle(0, circleRadius, circleRadius);\r\n    this.circleGraphic.endFill();\r\n\r\n    // position circle to be centered on y axis by the options height\r\n    centerPixiObject(this.circleGraphic, { axis: 'y', parent: { height: this.options.height } });\r\n}\r\n\r\nredrawBar() {\r\n    const t = this.circleGraphic.x;\r\n    const e = this.options.width - t;\r\n    this.backgroundGraphic.clear();\r\n    const i = this.options.opacity || 1;\r\n    this.backgroundGraphic.beginFill(this.options.activeColor, i);\r\n    this.backgroundGraphic.drawRect(0, 0, t, this.options.height);\r\n    this.backgroundGraphic.endFill();\r\n    this.backgroundGraphic.beginFill(this.options.inactiveColor, i);\r\n    this.backgroundGraphic.drawRect(t, 0, e, this.options.height);\r\n    this.backgroundGraphic.endFill();\r\n}\r\n  offChange(t: (v: number) => void) {\r\n    super.off(\"slider-change\", t);\r\n  }\r\n\r\n  onChange(t: (v: number) => void) {\r\n    super.on(\"slider-change\", t);\r\n  }\r\n}\r\nfunction lerp(a: number, b: number, t: number): number {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexport { Slider, SliderOptions };","import { TextField } from './Components/TextInput/TextField';\r\nexport * from './Components/TextInput/TextField';\r\n\r\nexport * from \"./Element\";\r\nimport { PixiElement } from \"./Element\";\r\n\r\nexport * from \"./Components/ScrollList/ScrollList\";\r\nimport { ScrollList } from \"./Components/ScrollList/ScrollList\";\r\n\r\nimport { ScrollBar } from \"./Components/ScrollList/ScrollBar\";\r\nexport * from \"./Components/ScrollList/ScrollBar\";\r\n\r\nimport { Toggle } from './Components/Toggle';\r\nexport * from './Components/Toggle';\r\n\r\nimport { Button } from './Components/Button';\r\nexport * from './Components/Button';\r\n\r\nimport { Slider } from './Components/Slider';\r\nexport * from './Components/Slider';\r\n\r\nimport { string2hex, centerPixiObject } from \"./utils\";\r\n\r\nconst utils = {\r\n    centerPixiObject,\r\n    string2hex\r\n}\r\nexport { utils }\r\n\r\nexport * from './types';\r\n\r\nif(PIXI !== undefined) {\r\n    PIXI['Slider'] = PIXI['Slider'] || Slider;\r\n    PIXI['Toggle'] = PIXI['Toggle'] || Toggle;\r\n    PIXI['TextField'] = PIXI['TextField'] || TextField;\r\n    PIXI['Element'] = PIXI['Element'] || PixiElement;\r\n    PIXI['ScrollBar'] = PIXI['ScrollBar'] || ScrollBar;\r\n    PIXI['ScrollList'] = PIXI['ScrollList'] || ScrollList;\r\n    PIXI['Button'] = PIXI['Button']|| Button;\r\n    if(PIXI.utils && !PIXI.utils['string2hex']) {\r\n        PIXI.utils['string2hex'] = string2hex;\r\n    }\r\n    PIXI.utils['centerObject'] = centerPixiObject;\r\n}\r\n\r\n"],"names":["value","parseLengthMeasurements","measurement","type","strMeasurement","err","clamp","num","min","max","string2hex","string","centerPixiObject","object","opts","parentRect","centerX","centerY","KeyboardHandlerMixin","Base","args","change","newIndex","event","pastedText","newText","selected","code","key","indexes","_a","_b","indexChange","char","defaultStyleOptions","lengthFieldsToValidate","TextFieldClass","font","styleOptions","maxCharacterLength","ignoreKeys","oldDestroy","options","_defaultStyleOptions","parsed","cursorX","error","cursorHeight","yOffset","bottomOffset","topOffset","range","currentCursorX","totalWidth","maxWidth","i","child","start","end","totalHeight","height","_width","e","x","startIndex","endIndex","index","leftChar","newCursorIndex","charChild","replaceWith","replaceWithArray","replacedLength","textArray","deleteCount","startX","endX","position","array","handler","c","TextField","PixiElement","timeout","eventName","element","hold","time","now","delta","currentDragY","diff","sign","dur","timeDiff","power","finishY","yDiff","tweenFunctions","b","_c","d","a","p","s","v","tweenFunctions_1","ScrollBar","scrollList","Scroller","parentTotalHeight","parentMaxHeight","n","y","mouseY","toY","movementY","globalP","globalScrollY","extra","utilizedSpaceForPercent","percent","scrollBar","o","length","defaultPerformanceOptions","ScrollList","scrollStyleOptions","scrollItemOptions","scrollPerformanceOptions","lastScrollY","prev","freeze","container","ix","ax","iy","ay","w","h","force","setFirstVisible","option","canSeeFromTop","canSeeFromBottom","wasVisible","ts","difference","distanceToTraverse","maxTime","absPower","multiplier","containers","fromIndex","toIndex","destroyItem","indexArray","indexOrContainer","indexesToRemove","foundOption","opt","el","point","foundChildren","Bounce","k","easingFunctions","processedEasingFunctions","easingGroup","mainFunction","parseName","name","tests","regex","match","getEasing","path","Color","color","hex","rgb","values","r","g","str","ColorTween","startColorStrings","endColorStrings","callback","frame","frames","endColor","startRGB","frameColor","val","j","interpolated","endColorResult","GLOBAL_PIXI_DTA_PROPERTY_KEY","JustifyContent","FlexDirection","FlexWrap","AnimationType","ToggleAnimationExclusions","DEFAULT_CIRCLE_PADDING","Toggle","isToggled","borderRadius","fontName","onLabel","offLabel","onColor","offColor","offXDiff","offYDiff","onXDiff","colors","progress","traveledDistance","exclude","width","activeColorsArray","inactiveColorsArray","xPosition","circleColor","backgroundColor","Button","text","newState","sprite","borderColor","borderWidth","backgroundTexture","backgroundOpacity","borderOpacity","computedBorderRadius","Slider","t","maxValue","minValue","lerp","circleOpacity","circleRadius","_d","_e","_f","circleOutlineWidth","_g","_h","circleOutlineColor","_i","_j","circleOutlineOpacity","_k","_l","utils"],"mappings":"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","x_google_ignoreList":[4]}